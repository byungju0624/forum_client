[{"/home/nell/project/forum_client/forum_project/src/component/App.js":"1","/home/nell/project/forum_client/forum_project/src/component/MyPage/Profile.js":"2","/home/nell/project/forum_client/forum_project/src/component/MyPage/MyProjectListDetail.js":"3","/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js":"4","/home/nell/project/forum_client/forum_project/src/component/MyPage/MyProjectList.js":"5","/home/nell/project/forum_client/forum_project/src/index.js":"6","/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"7","/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js":"8","/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"9","/home/nell/project/forum_client/forum_project/src/component/Project/Project.js":"10","/home/nell/project/forum_client/forum_project/src/component/MainPage/MainPage.js":"11","/home/nell/project/forum_client/forum_project/src/component/MainPage/FirstBlock.js":"12","/home/nell/project/forum_client/forum_project/src/component/Guide/Guide.js":"13","/home/nell/project/forum_client/forum_project/src/component/MyPage/MyPage.js":"14"},{"size":2360,"mtime":1611214682191,"results":"15","hashOfConfig":"16"},{"size":993,"mtime":1611645554911,"results":"17","hashOfConfig":"16"},{"size":9715,"mtime":1611813278187,"results":"18","hashOfConfig":"16"},{"size":10906,"mtime":1611645554911,"results":"19","hashOfConfig":"16"},{"size":5049,"mtime":1611755502628,"results":"20","hashOfConfig":"16"},{"size":207,"mtime":1611063682030,"results":"21","hashOfConfig":"16"},{"size":4843,"mtime":1611757902658,"results":"22","hashOfConfig":"16"},{"size":4678,"mtime":1611762961248,"results":"23","hashOfConfig":"16"},{"size":6916,"mtime":1611686940416,"results":"24","hashOfConfig":"16"},{"size":3195,"mtime":1611755502628,"results":"25","hashOfConfig":"16"},{"size":232,"mtime":1611645554911,"results":"26","hashOfConfig":"16"},{"size":1713,"mtime":1611755502628,"results":"27","hashOfConfig":"16"},{"size":788,"mtime":1611063682030,"results":"28","hashOfConfig":"16"},{"size":2214,"mtime":1611755502628,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"158mqmo",{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nell/project/forum_client/forum_project/src/component/App.js",["67","68","69","70","71","72"],"import \"../css/App.css\";\nimport React, { useState } from \"react\";\nimport Menu from \"../component/Menu\";\nimport Mypage from \"../component/MyPage/MyPage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport { storage } from \"../firebase\";\nimport { useEffect } from \"react\";\n\nlet dataFire = null;\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n\t});\n\t\n\n\tfunction delay(ms){\n\t\treturn new Promise((resolve, reject) =>{ \n\t\t\tsetTimeout(resolve, ms)\n\t\t})\n\t}\n\n\n\tlet getFireBaseImage = (image) => {\n\t\treturn storage.ref('project').child(image).getDownloadURL().then((url) => {\n\t\t\treturn url\n\t\t}).catch((error) => {\n\t\t\tconsole.log('이미지를 받아오지 못했습니다.'+error)\n\t\t})\n\t}\n\n\n\n\tuseEffect(async ()=> {\n\t\tlet result = await getFirestoreData();\n\t\tawait delay(1000)\n\t\tlet resultString = JSON.stringify(result)//로컬스토리지에는 문자열만 넣을 수 있음\n\t\tlocalStorage.setItem(\"fireStoreData\", resultString)\n\t\tdataFire = localStorage.getItem(\"fireStoreData\")\n\t\tconsole.log(dataFire)\n\t},[])\n\n\n\n\tlet getFirestoreData = async () => {\n\t\tlet eachStore = []\n\t\tlet result = await firestore.collection(\"project\").get().then(function (querySnapshot) {               //result는 await를 하기 위해서 만들어낸 변수\n\t\t\tquerySnapshot.forEach(async function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n\t\t\t\t//console.log(doc.id, \" => \", doc.data())\n\t\t\t\tconsole.log(\"요청하는 이미지는 다음과 같습니다 :\" + doc.data().image)\n\t\t\t\tlet image = await getFireBaseImage(doc.data().image)\n\t\t\t\tlet eachData = {\n\t\t\t\t\t'comment' : doc.data().comment,\n\t\t\t\t\t'finish' : doc.data().finish,\n\t\t\t\t\t'host' : doc.data().host,\n\t\t\t\t\t'image' : image,\n\t\t\t\t\t'name' : doc.data().name,\n\t\t\t\t\t'party' : doc.data().party,\n\t\t\t\t\t'signed' : doc.data().signed,\n\t\t\t\t\t'skill' : doc.data().skill,\n\t\t\t\t\t'term' : doc.data().term\n\t\t\t\t}\n\t\t\t\teachStore.push(eachData)\n\t\t\t});\n\t\t})\n\t\treturn eachStore\n\t}\n\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu login={login} setLogin={setLogin}></Menu>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["73","74"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/Profile.js",["75","76","77","78"],"import React from \"react\";\nimport styles from \"../../css/MyPage/Profile.module.css\";\nimport firebase from \"firebase/app\";\nimport auth from \"firebase/auth\";\nconst Profile = (props) => {\n  let user = firebase.auth().currentUser;\n  let name, email, photoUrl, uid, emailVerified;\n  console.log(\"유저 정보\", user);\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    photoUrl = user.photoURL;\n    emailVerified = user.emailVerified;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n  return (\n    <div className={styles.header}>\n      <div>\n        <img src={photoUrl} style={{ borderRadius: \"50px\" }}></img>\n      </div>\n      <div style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\n        {name} 님, 환영합니다.\n      </div>\n      <div>이메일: {email}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n",["79","80"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/MyProjectListDetail.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js",["97","98","99","100"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/MyProjectList.js",["101","102","103","104","105","106","107","108","109"],"import React from \"react\";\nimport styles from \"../../css/MyPage/MyProjectList.module.css\";\nimport firebase from \"firebase/app\";\nimport auth from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\n// import Slider from \"react-slick\";\n\nconst MyProjectList = (props) => {\n  // const settings = {\n  //   dots: true,\n  //   infinite: true,\n  //   slidesToShow: 3,\n  //   slidesToScroll: 3,\n  //   arrow: true,\n  //   className: \"slides\",\n  // };\n  const history = useHistory();\n  let user = firebase.auth().currentUser;\n  let name, email, photoUrl, uid, emailVerified;\n  console.log(\"유저 정보\", user);\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    photoUrl = user.photoURL;\n    emailVerified = user.emailVerified;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n\n  let dataFire = JSON.parse(localStorage.getItem(\"fireStoreData\"));\n  let myRegistedProject = dataFire.filter((el) => {\n    if (el.host === email) return el;\n  });\n  console.log(\"파이어베이스 데이터(전체):\", dataFire);\n\n  let joinProject = [\"test4\", \"test2\"];\n  let myJoinedProject = dataFire.filter((el) => {\n    console.log(\"data:\", el);\n    for (let i = 0; i < joinProject.length; i++) {\n      if (el.name === joinProject[i]) return el;\n    }\n  });\n  console.log(\"myJoinedProject:\", myJoinedProject);\n\n  // for (let i = 0; i < joinProject.length; i++) {\n  //   let temp = dataFire.filter((el) => {\n  //     if (el.name === joinProject[i]) return el;\n  //   })\n  //   console.log('temp 값:', temp)\n  //   myJoinedProject.push(temp)\n  //   console.log('myJoinedProject:', myJoinedProject)\n  // }\n\n  let photo = null;\n  let projectName = null;\n  let period = null;\n  let person = null;\n  let lang = null;\n\n  let handleClick = (e) => {\n    console.log(\"e.target:\", e.target);\n    photo = e.target.src;\n    projectName = e.target.name;\n    period = e.target.period;\n    person = e.target.person;\n    lang = e.target.lang;\n    console.log(\n      \"이미지:\",\n      photo,\n      \"이름:\",\n      projectName,\n      \"기간:\",\n      period,\n      \"인원:\",\n      person,\n      \"스킬\",\n      lang\n    );\n    history.push({\n      pathname: \"/mypage/myprojectlistdetail\",\n      state: {\n        photo: photo,\n        name: projectName,\n        period: period,\n        person: person,\n        lang: lang,\n      },\n    });\n  };\n\n  return (\n    <div className={styles.header}>\n      {/* <Slider {...settings}>\n        <div>위시리스트1</div>\n        <div>위시리스트2</div>\n        <div>위시리스트3</div>\n        <div>위시리스트4</div>\n        <div>위시리스트5</div>\n      </Slider> */}\n      <div>내가 등록한 프로젝트</div>\n      <div className={styles.firstContainer}>\n        {myRegistedProject.map((eachData) => {\n          return (\n            <div className={styles.cardwraper}>\n              <div className={styles.card}>\n                <div className={styles.card_img}>\n                  <img\n                    src={eachData.image}\n                    name={eachData.name}\n                    period={eachData.term}\n                    person={eachData.party}\n                    lang={eachData.skill}\n                    className={styles.photo}\n                    onClick={handleClick}\n                  ></img>\n                </div>\n              </div>\n              <ul>\n                <li>프로젝트 : {eachData.name}</li>\n                <li>예상기간 : {eachData.term}</li>\n                <li>현재인원 : {eachData.party}명</li>\n                <li>\n                  사용언어 :{\" \"}\n                  {eachData.skill.map((el) => {\n                    return <span className={styles.skill}>{el}</span>;\n                  })}\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n\n      <div style={{ marginTop: \"5vh\" }}>내가 참가 중인 프로젝트</div>\n      <div className={styles.secondContainer}>\n        {myJoinedProject.map((eachData) => {\n          console.log(eachData);\n          return (\n            <div className={styles.cardwraper}>\n              <div className={styles.card}>\n                <div className={styles.card_img}>\n                  <img\n                    src={eachData.image}\n                    name={eachData.name}\n                    period={eachData.term}\n                    person={eachData.party}\n                    lang={eachData.skill}\n                    className={styles.photo}\n                  ></img>\n                </div>\n              </div>\n              <ul>\n                <li>프로젝트 이름:{eachData.name}</li>\n                <li>예상 기간: {eachData.term}</li>\n                <li>현재 인원: {eachData.party}</li>\n                <li>사용 언어: {eachData.skill}</li>\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MyProjectList;\n",["110","111"],"/home/nell/project/forum_client/forum_project/src/index.js",[],"/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["112","113","114","115","116","117","118","119"],"import React, { useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport styles from \"../../css/Project/ProjectDetail.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { firestore } from \"../../firebase\";\nimport auth from \"firebase/auth\";\n\nfunction ProjectDetail() {\n  let location = useLocation();\n  let photo = location.state.photo;\n  let name = location.state.name;\n  let period = location.state.period;\n  let person = location.state.person;\n  let lang = location.state.lang;\n  let applied = null;\n  let account = undefined;\n\n  let history = useHistory();\n\n  let dataFire = JSON.parse(localStorage.getItem(\"fireStoreData\")).filter(\n    (eachData) => {\n      if (eachData.name === name) return eachData;\n    }\n  );\n  console.log(\"파이어베이스 데이터(필터링):\", dataFire);\n  let term = dataFire[0].term;\n  let party = dataFire[0].party;\n  let signed = dataFire[0].signed;\n  let comment = dataFire[0].comment;\n  let host = dataFire[0].host; //프로젝트 주인장 아이디\n  console.log(\"프로젝트의 이름은 다음과 같습니다 : \" + name);\n  console.log(\"프로젝트를 등록한 유저의 아이디는 다음과 같습니다 : \" + host);\n\n  function delay(ms) {\n    return new Promise((resolve, reject) => {\n      //promise 객체 반환, async도 promise를 다루는 기술이란 것을 잊지 말것\n      setTimeout(resolve, ms);\n    });\n  }\n\n  let checkLogInUser = () => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        console.log(\"머리 뜨겁네\" + user.email);\n        account = user.email;\n      } else {\n        console.log(\"위에서 반환이 되지 않으면 undefined가 나감\");\n      }\n    });\n  };\n\n  let readProjectData = (account) => {\n    firestore\n      .collection(\"users\")\n      .doc(account)\n      .get()\n      .then(async function (doc) {\n        if (doc.exists) {\n          applied = doc.data().appliedProject;\n          console.log(\"가져온 친구는 다음과 같습니다\" + applied);\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      });\n  };\n  //----------------------------------------------------------------------------------\n\n  let applyProject = async () => {\n    checkLogInUser(); //프로젝트 신청자 아이디\n    await delay(800);\n    readProjectData(account);\n    await delay(800);\n    console.log(\"account는 다음과 같음\" + account);\n    console.log(\"applied는 다음과 같음\" + applied);\n    if (account === undefined) {\n      alert(\"로그인을 하셔야 프로젝트에 지원 하실 수 있으세요\");\n    } else if (account === host) {\n      alert(\"자기 프로젝트에는 지원하실 수 없어요ㅠㅠ\");\n    } else if (applied.includes(name) === true) {\n      alert(\"이미 지원하신 프로젝트입니다\");\n    } else {\n      await firestore\n        .collection(\"users\")\n        .doc(host)\n        .update({\n          submittedProject: firebase.firestore.FieldValue.arrayUnion({\n            applicant: account,\n            project: name,\n          }),\n        });\n      await firestore\n        .collection(\"users\")\n        .doc(account)\n        .update({\n          appliedProject: firebase.firestore.FieldValue.arrayUnion(name),\n        });\n      await delay(1500);\n      alert(\"지원을 성공적으로 마치셨습니다.\");\n      window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.projectDetail}>\n        <div className={styles.header}>\n          <h2>프로젝트명: {name}</h2>\n        </div>\n        <div className={styles.projectEx}>\n          <img src={photo}></img>\n\n          <div className={styles.text}>\n            <div>예상기간: {term}</div>\n            <div style={{ marginTop: \"2vh\" }}>예상인원: {party}명</div>\n            <div style={{ marginTop: \"2vh\" }}>현재지원: {signed}명</div>\n            <div style={{ marginTop: \"2vh\" }}>\n              사용언어:{\" \"}\n              {dataFire.map((eachData) => {\n                {\n                  return eachData.skill.map((skill) => {\n                    console.log(skill);\n                    return <span className={styles.skill}>{skill}</span>;\n                  });\n                }\n              })}\n            </div>\n          </div>\n        </div>\n        <div className={styles.explain}>\n          <h3>개요:{comment}</h3>\n        </div>\n        <div className={styles.btn}>\n          <span>\n            <button onClick={applyProject}>지원하기</button>\n          </span>\n          <span>\n            <button\n              style={{ marginLeft: \"6vh\" }}\n              onClick={() => history.goBack()}\n            >\n              뒤로가기\n            </button>\n          </span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectDetail;\n","/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js",["120","121","122","123","124","125","126","127"],"import React from \"react\";\nimport styles from \"../../css/MyPage/ApplyStatus.module.css\";\n\nimport { firestore } from \"../../firebase\";\nimport auth from \"firebase/auth\";\nimport firebase from \"firebase/app\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nlet appliedData = undefined;\nlet messageData = undefined;\nlet name, email, photoUrl, uid, emailVerified;\nlet host;\n\nconst ApplyStatus = (props) => {\n\tconst history = useHistory();\n\tlet appliedData;\n  const [appliedProjectData, setAppliedProjectData] = useState([]);\n  const [myMessageData, setMyMessageData] = useState([]);\n\n  useEffect(async () => {\n    let user = firebase.auth().currentUser;\n    if (user != null) {\n      name = user.displayName;\n      email = user.email;\n      photoUrl = user.photoURL;\n      emailVerified = user.emailVerified;\n      uid = user.uid;\n    }\n\n    await getMyAppliedProject(email);\n    await getMessage(email);\n    await delay(1000);\n    console.log(\"등록된 프로젝트\", appliedData);\n    setAppliedProjectData(appliedData);\n\t\tsetMyMessageData(messageData);\n  }, []);\n\n\n\n  function delay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  let getMyAppliedProject = async (email) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(email)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          appliedData = doc.data().appliedProject;\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n\n  let getMessage = async (email) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(email)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          messageData = doc.data().message;\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\t};\n\t\n\n\t//------------------------------------------------------------------------------------------------------취소하기\n\t\n\tlet cancelApply = async(projectName, myEmail) => {\n\t\tawait findHostEmail(projectName)\n\t\tawait delay(500)\n\t\tconsole.log(host)\n\t\tconsole.log(projectName)\n\t\tconsole.log(myEmail)\n\t\tawait deleteSubmmitRejectData(host, myEmail, projectName)\n\t\tawait delay(500)\n\t\tawait rejectUserDataApprovedUpdate(projectName, myEmail)\n\t}\n\n\tlet findHostEmail = async(projectName) => {\n\t\tfirebase.firestore().collection(\"project\").doc(projectName).get().then(async function (doc){\n\t\t\tif(doc.exists){\n\t\t\t\thost = await doc.data().host\n\t\t\t}else{\n\t\t\t\tconsole.log(\"문서가 존재하지 않습니다\")\n\t\t\t}\n\t\t})\n\t}\n\n\tlet rejectUserDataApprovedUpdate = (projectName, user) => {\n    firestore\n      .collection(\"users\")\n      .doc(user)\n      .update({\n        appliedProject: firebase.firestore.FieldValue.arrayRemove(projectName),\n      })\n      .then(() => {\n        return history.push(\"/mypage/profile\");\n      });\n  };\n\n  let deleteSubmmitRejectData = (host, user, projectName) => {\n    let objectDelete = { applicant: user, project: projectName };\n    firestore\n      .collection(\"users\")\n      .doc(host)\n      .update({\n        submittedProject: firebase.firestore.FieldValue.arrayRemove(\n          objectDelete\n        ),\n      });\n  };\n\n\n\t//------------------------------------------------------------------------------------------------------\n\n\n  return (\n    <div className={styles.header}>\n      <div className={styles.table}>\n        <div className={styles.title}>\n          <li>프로젝트</li>\n          <li>신청현황</li>\n          <li>신청취소</li>\n        </div>\n\n        {appliedProjectData.map((data) => {\n          return (\n            <div className={styles.tableInt}>\n              <div style={{ width: \"50%\" }}>\n                <div>{data}</div>\n              </div>\n              <div style={{ width: \"50%\", marginLeft: \"5.5vh\" }}>\n                <div>승인대기중</div>\n              </div>\n              <div style={{ width: \"50%\" }}>\n                <button style={{ fontWeight: \"bold\", marginLeft: \"5.5vh\" }} onClick={()=>{cancelApply(data, email)}}>\n                  취소하기\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        {myMessageData.map((message) => {\n          return (\n            <div className={styles.messagearea}>\n              <div className={styles.message}>{message}.</div>\n            </div>\n          );\n        })}\n\n      </div>\n    </div>\n  );\n  };\nexport default ApplyStatus;\n","/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",["128","129","130","131","132","133","134","135"],"/home/nell/project/forum_client/forum_project/src/component/Project/Project.js",["136","137","138","139","140","141","142","143"],"import styles from \"../../css/Project/Project.module.css\";\nimport { withRouter, Link, useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport firebase from \"firebase/app\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nlet photo = null;\nlet name = null;\nlet period = null;\nlet person = null;\nlet lang = null;\n\nfunction Project(props) {\n  let json = localStorage.getItem(\"fireStoreData\");\n  let localData = JSON.parse(json) || [];\n  let [dataFire, setDataFire] = useState(localData);\n\n  /*function delay(ms){\n\t\treturn new Promise((resolve, reject) =>{\n\t\t\tsetTimeout(resolve, ms)\n\t\t})\n\t}*/\n\n  /*useEffect(async ()=> {\n\t\tawait delay(2000)\n\t\tconsole.log(\"루삥뽕\"+JSON.stringify(dataFire))\n\t},[])*/\n\n  let history = useHistory();\n\n  let handleClick = (e) => {\n    console.log(\"e.target:\", e.target);\n    photo = e.target.src;\n    name = e.target.name;\n    period = e.target.period;\n    person = e.target.person;\n    lang = e.target.lang;\n    console.log(\n      \"이미지:\",\n      photo,\n      \"이름:\",\n      name,\n      \"기간:\",\n      period,\n      \"인원:\",\n      person,\n      \"스킬\",\n      lang\n    );\n    history.push({\n      pathname: \"/projectdetail\",\n      state: {\n        photo: photo,\n        name: name,\n        period: period,\n        person: person,\n        lang: lang,\n      },\n    });\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    arrow: true,\n    className: \"slides\",\n  };\n\n  return (\n    <div className={styles.project}>\n      <h2>프로젝트 열람</h2>\n      <Slider {...settings}>\n        {dataFire.map((eachData) => {\n          console.log(\"개별 프로젝트 데이터:\", eachData);\n          return (\n            <div className={styles.cardwraper}>\n              <div className={styles.card}>\n                <div className={styles.card_img}>\n                  <img\n                    src={eachData.image}\n                    name={eachData.name}\n                    period={eachData.term}\n                    person={eachData.party}\n                    lang={eachData.skill}\n                    className={styles.photo}\n                    onClick={handleClick}\n                  ></img>\n                </div>\n              </div>\n              <ul>\n                <li>프로젝트: {eachData.name}</li>\n                <li style={{ marginTop: \"4px\" }}>예상기간: {eachData.term}</li>\n                <li style={{ marginTop: \"4px\" }}>\n\n                  예상인원: {eachData.party}명\n\n                </li>\n                <li>\n                  <div className={styles.tag}>\n                    <div>사용언어: </div>\n                    {eachData.skill.map((skill) => {\n                      return (\n                        <>\n                          <div className={styles.skill}>{skill}</div>\n                        </>\n                      );\n                    })}\n                  </div>\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n      </Slider>\n    </div>\n  );\n}\n\nexport default Project;\n","/home/nell/project/forum_client/forum_project/src/component/MainPage/MainPage.js",[],"/home/nell/project/forum_client/forum_project/src/component/MainPage/FirstBlock.js",[],"/home/nell/project/forum_client/forum_project/src/component/Guide/Guide.js",[],"/home/nell/project/forum_client/forum_project/src/component/MyPage/MyPage.js",[],{"ruleId":"144","severity":1,"message":"145","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"148","line":7,"column":35,"nodeType":"146","messageId":"147","endLine":7,"endColumn":40},{"ruleId":"144","severity":1,"message":"149","line":7,"column":42,"nodeType":"146","messageId":"147","endLine":7,"endColumn":48},{"ruleId":"150","severity":1,"message":"151","line":43,"column":12,"nodeType":"152","endLine":50,"endColumn":3},{"ruleId":"150","severity":1,"message":"153","line":50,"column":4,"nodeType":"154","endLine":50,"endColumn":6,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"156","line":56,"column":7,"nodeType":"146","messageId":"147","endLine":56,"endColumn":13},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"144","severity":1,"message":"161","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"162","line":13,"column":5,"nodeType":"146","messageId":"147","endLine":13,"endColumn":18},{"ruleId":"144","severity":1,"message":"163","line":14,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":8},{"ruleId":"164","severity":1,"message":"165","line":21,"column":9,"nodeType":"166","endLine":21,"endColumn":62},{"ruleId":"157","replacedBy":"167"},{"ruleId":"159","replacedBy":"168"},{"ruleId":"144","severity":1,"message":"169","line":2,"column":20,"nodeType":"146","messageId":"147","endLine":2,"endColumn":26},{"ruleId":"144","severity":1,"message":"170","line":2,"column":28,"nodeType":"146","messageId":"147","endLine":2,"endColumn":39},{"ruleId":"144","severity":1,"message":"171","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":17},{"ruleId":"172","severity":1,"message":"173","line":22,"column":42,"nodeType":"152","messageId":"174","endLine":22,"endColumn":44},{"ruleId":"144","severity":1,"message":"175","line":30,"column":17,"nodeType":"146","messageId":"147","endLine":30,"endColumn":27},{"ruleId":"144","severity":1,"message":"176","line":36,"column":10,"nodeType":"146","messageId":"147","endLine":36,"endColumn":19},{"ruleId":"144","severity":1,"message":"177","line":36,"column":21,"nodeType":"146","messageId":"147","endLine":36,"endColumn":33},{"ruleId":"144","severity":1,"message":"178","line":40,"column":10,"nodeType":"146","messageId":"147","endLine":40,"endColumn":21},{"ruleId":"144","severity":1,"message":"179","line":40,"column":23,"nodeType":"146","messageId":"147","endLine":40,"endColumn":37},{"ruleId":"144","severity":1,"message":"180","line":41,"column":9,"nodeType":"146","messageId":"147","endLine":41,"endColumn":19},{"ruleId":"144","severity":1,"message":"181","line":41,"column":21,"nodeType":"146","messageId":"147","endLine":41,"endColumn":34},{"ruleId":"172","severity":1,"message":"182","line":171,"column":24,"nodeType":"152","messageId":"183","endLine":171,"endColumn":26},{"ruleId":"172","severity":1,"message":"182","line":180,"column":36,"nodeType":"152","messageId":"183","endLine":180,"endColumn":38},{"ruleId":"172","severity":1,"message":"182","line":212,"column":29,"nodeType":"152","messageId":"183","endLine":212,"endColumn":31},{"ruleId":"172","severity":1,"message":"182","line":221,"column":27,"nodeType":"152","messageId":"183","endLine":221,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":237,"column":13,"nodeType":"166","endLine":237,"endColumn":73},{"ruleId":"144","severity":1,"message":"169","line":2,"column":20,"nodeType":"146","messageId":"147","endLine":2,"endColumn":26},{"ruleId":"144","severity":1,"message":"170","line":2,"column":28,"nodeType":"146","messageId":"147","endLine":2,"endColumn":39},{"ruleId":"144","severity":1,"message":"184","line":11,"column":18,"nodeType":"146","messageId":"147","endLine":11,"endColumn":27},{"ruleId":"164","severity":1,"message":"165","line":239,"column":15,"nodeType":"166","endLine":239,"endColumn":65},{"ruleId":"144","severity":1,"message":"161","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"185","line":22,"column":5,"nodeType":"146","messageId":"147","endLine":22,"endColumn":9},{"ruleId":"144","severity":1,"message":"186","line":24,"column":5,"nodeType":"146","messageId":"147","endLine":24,"endColumn":13},{"ruleId":"144","severity":1,"message":"162","line":25,"column":5,"nodeType":"146","messageId":"147","endLine":25,"endColumn":18},{"ruleId":"144","severity":1,"message":"163","line":26,"column":5,"nodeType":"146","messageId":"147","endLine":26,"endColumn":8},{"ruleId":"172","severity":1,"message":"173","line":32,"column":48,"nodeType":"152","messageId":"174","endLine":32,"endColumn":50},{"ruleId":"172","severity":1,"message":"173","line":38,"column":46,"nodeType":"152","messageId":"174","endLine":38,"endColumn":48},{"ruleId":"164","severity":1,"message":"165","line":108,"column":19,"nodeType":"166","endLine":116,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":143,"column":19,"nodeType":"166","endLine":150,"endColumn":20},{"ruleId":"157","replacedBy":"187"},{"ruleId":"159","replacedBy":"188"},{"ruleId":"144","severity":1,"message":"189","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"161","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":12},{"ruleId":"144","severity":1,"message":"190","line":13,"column":7,"nodeType":"146","messageId":"147","endLine":13,"endColumn":13},{"ruleId":"144","severity":1,"message":"191","line":14,"column":7,"nodeType":"146","messageId":"147","endLine":14,"endColumn":13},{"ruleId":"144","severity":1,"message":"192","line":15,"column":7,"nodeType":"146","messageId":"147","endLine":15,"endColumn":11},{"ruleId":"172","severity":1,"message":"173","line":22,"column":16,"nodeType":"152","messageId":"174","endLine":22,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":111,"column":11,"nodeType":"166","endLine":111,"endColumn":28},{"ruleId":"193","severity":1,"message":"194","line":120,"column":17,"nodeType":"195","messageId":"196","endLine":125,"endColumn":18},{"ruleId":"144","severity":1,"message":"161","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":12},{"ruleId":"144","severity":1,"message":"197","line":11,"column":5,"nodeType":"146","messageId":"147","endLine":11,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":22,"column":13,"nodeType":"152","endLine":38,"endColumn":4},{"ruleId":"144","severity":1,"message":"185","line":25,"column":7,"nodeType":"146","messageId":"147","endLine":25,"endColumn":11},{"ruleId":"144","severity":1,"message":"186","line":27,"column":7,"nodeType":"146","messageId":"147","endLine":27,"endColumn":15},{"ruleId":"144","severity":1,"message":"162","line":28,"column":7,"nodeType":"146","messageId":"147","endLine":28,"endColumn":20},{"ruleId":"144","severity":1,"message":"163","line":29,"column":7,"nodeType":"146","messageId":"147","endLine":29,"endColumn":10},{"ruleId":"150","severity":1,"message":"198","line":38,"column":6,"nodeType":"154","endLine":38,"endColumn":8,"suggestions":"199"},{"ruleId":"144","severity":1,"message":"200","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"161","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":12},{"ruleId":"144","severity":1,"message":"201","line":15,"column":9,"nodeType":"146","messageId":"147","endLine":15,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":27,"column":12,"nodeType":"152","endLine":43,"endColumn":3},{"ruleId":"144","severity":1,"message":"185","line":31,"column":6,"nodeType":"146","messageId":"147","endLine":31,"endColumn":10},{"ruleId":"144","severity":1,"message":"186","line":33,"column":6,"nodeType":"146","messageId":"147","endLine":33,"endColumn":14},{"ruleId":"144","severity":1,"message":"162","line":34,"column":6,"nodeType":"146","messageId":"147","endLine":34,"endColumn":19},{"ruleId":"144","severity":1,"message":"163","line":35,"column":6,"nodeType":"146","messageId":"147","endLine":35,"endColumn":9},{"ruleId":"144","severity":1,"message":"202","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":20},{"ruleId":"144","severity":1,"message":"203","line":2,"column":22,"nodeType":"146","messageId":"147","endLine":2,"endColumn":26},{"ruleId":"144","severity":1,"message":"204","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":16},{"ruleId":"144","severity":1,"message":"205","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":19},{"ruleId":"144","severity":1,"message":"171","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":17},{"ruleId":"144","severity":1,"message":"206","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":19},{"ruleId":"144","severity":1,"message":"207","line":19,"column":18,"nodeType":"146","messageId":"147","endLine":19,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":84,"column":19,"nodeType":"166","endLine":92,"endColumn":20},"no-unused-vars","'Mypage' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getFirestoreData'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'result' is assigned a value but never used.","no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'auth' is defined but never used.","'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["209"],["210"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'storage' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setSkilled' is assigned a value but never used.","'eachSkill' is assigned a value but never used.","'setEachSkill' is assigned a value but never used.","'imageAsFile' is assigned a value but never used.","'setImageAsFile' is assigned a value but never used.","'imageAsUrl' is assigned a value but never used.","'setImageAsUrl' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'setFinish' is assigned a value but never used.","'name' is assigned a value but never used.","'photoUrl' is assigned a value but never used.",["209"],["210"],"'useState' is defined but never used.","'period' is assigned a value but never used.","'person' is assigned a value but never used.","'lang' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'appliedData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appliedData' and 'getMyAppliedProject'. Either include them or remove the dependency array.",["211"],"'Slider' is defined but never used.","'settings' is assigned a value but never used.","'withRouter' is defined but never used.","'Link' is defined but never used.","'firebase' is defined but never used.","'firestore' is defined but never used.","'useEffect' is defined but never used.","'setDataFire' is assigned a value but never used.",{"desc":"212","fix":"213"},"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},"Update the dependencies array to be: [getFirestoreData]",{"range":"216","text":"217"},"Update the dependencies array to be: [appliedData, getMyAppliedProject]",{"range":"218","text":"219"},[1224,1226],"[getFirestoreData]",[1111,1113],"[appliedData, getMyAppliedProject]"]