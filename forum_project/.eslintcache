[{"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/Project.js":"1","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Guide/Guide.js":"2","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Regist/Regist.js":"3","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/firebase.js":"4","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/MyPage.js":"5","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/MainPage.js":"6","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/ThirdBlock.js":"7","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/index.js":"8","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"9","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/SecondBlock.js":"10"},{"size":3709,"mtime":1610607637861,"results":"11","hashOfConfig":"12"},{"size":786,"mtime":1610766578600,"results":"13","hashOfConfig":"12"},{"size":7034,"mtime":1610692530861,"results":"14","hashOfConfig":"12"},{"size":858,"mtime":1610675364596,"results":"15","hashOfConfig":"12"},{"size":188,"mtime":1610437579296,"results":"16","hashOfConfig":"12"},{"size":398,"mtime":1610503910452,"results":"17","hashOfConfig":"12"},{"size":343,"mtime":1610503913727,"results":"18","hashOfConfig":"12"},{"size":207,"mtime":1610419429641,"results":"19","hashOfConfig":"12"},{"size":1574,"mtime":1610607607850,"results":"20","hashOfConfig":"12"},{"size":1106,"mtime":1610608977390,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"26wkim",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/Project.js",["46","47","48"],"import styles from \"../../css/Project/Project.module.css\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport React, { Component } from \"react\";\n// const photos = [\n//   {\n//     name: \"photo1\",\n//     url:\n//       \"http://img.khan.co.kr/news/2019/11/29/l_2019112901003607500286631.jpg\",\n//   },\n//   {\n//     name: \"photo2\",\n//     url:\n//       \"https://www.ui4u.go.kr/depart/img/content/sub03/img_con03030100_01.jpg\",\n//   },\n//   {\n//     name: \"photo3\",\n//     url: \"https://image.dongascience.com/Photo/2018/01/15159739972169[1].jpg\",\n//   },\n//   {\n//     name: \"photo4\",\n//     url:\n//       \"https://www.sisa-news.com/data/photos/20200936/art_159912317533_32480a.jpg\",\n//   },\n// ];\nlet photo = null;\nlet name = null;\nlet period = null;\nlet person = null;\nlet lang = null;\nexport default class Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photos: [\n        {\n          name: \"photo1\",\n          period: \"2021-03-04\",\n          person: \"4\",\n          lang: \"javaScript,react\",\n          url:\n            \"http://img.khan.co.kr/news/2019/11/29/l_2019112901003607500286631.jpg\",\n        },\n        {\n          name: \"photo2\",\n          period: \"2021-03-10\",\n          person: \"2\",\n          lang: \"typeScript,react\",\n          url:\n            \"https://www.ui4u.go.kr/depart/img/content/sub03/img_con03030100_01.jpg\",\n        },\n        {\n          name: \"photo3\",\n          period: \"2021-03-15\",\n          person: \"5\",\n          lang: \"typeScript,react\",\n          url:\n            \"https://image.dongascience.com/Photo/2018/01/15159739972169[1].jpg\",\n        },\n        {\n          name: \"photo4\",\n          period: \"2021-03-07\",\n          person: \"1\",\n          lang: \"javaScript,react\",\n          url:\n            \"https://www.sisa-news.com/data/photos/20200936/art_159912317533_32480a.jpg\",\n        },\n      ],\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = (e) => {\n    console.log(e.target.period);\n    photo = e.target.src;\n    name = e.target.name;\n    period = e.target.period;\n    person = e.target.person;\n    lang = e.target.lang;\n    this.props.history.push({\n      pathname: \"/projectdetail\",\n      state: {\n        photo: photo,\n        name: name,\n        period: period,\n        person: person,\n        lang: lang,\n      },\n    });\n  };\n\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      arrow: true,\n      className: \"slides\",\n    };\n\n    return (\n      <div className={styles.project}>\n        <h2>프로젝트 열람</h2>\n        <Slider {...settings}>\n          {this.state.photos.map((photo) => {\n            console.log(photo.person);\n            return (\n              <div className={styles.cardwraper}>\n                <div className={styles.card}>\n                  <div className={styles.card_img}>\n                    <img\n                      src={photo.url}\n                      name={photo.name}\n                      period={photo.period}\n                      person={photo.person}\n                      lang={photo.lang}\n                      className={styles.photo}\n                      onClick={this.handleClick}\n                    ></img>\n                  </div>\n                </div>\n\n                <ul>\n                  <li>프로젝트 이름:{photo.name}</li>\n                  <li>예상 기간: {photo.period}</li>\n                  <li>현재 인원: {photo.person}</li>\n                  <li>사용 언어: {photo.lang}</li>\n                </ul>\n              </div>\n            );\n          })}\n        </Slider>\n      </div>\n    );\n  }\n}\n",["49","50"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Guide/Guide.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Regist/Regist.js",["51","52","53","54","55","56","57","58"],"import styles from \"../../css/Regist/Regist.module.css\";\nimport { useState } from \"react\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport { useHistory } from \"react-router-dom\";\nfunction Regist() {\n  const [comment, setComment] = useState(\"\");\n  const [finish, setFinish] = useState(false);\n  const [host, setHost] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [party, setParty] = useState(0);\n  const [signed, setSigned] = useState(0);\n  const [skill, setSkilled] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const history = useHistory();\n\n  //하나의 기술 문자열을 담기 위한 샅애\n  const [eachSkill, setEachSkill] = useState(\"\");\n\n  //이미지를 받기 위해 필요한 상태\n  const [getImage, setGetImage] = useState(\"\");\n\n  //이미지를 업로드 하기 위한 상태들\n  const allInputs = { imgUrl: \"\" };\n  const [imageAsFile, setImageAsFile] = useState(\"\");\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n  console.log(imageAsFile);\n\n  let readDatabase = () => {\n    //데이터베이스 read\n    firestore\n      .collection(\"project\")\n      .doc(\"떡상가즈아\")\n      .get()\n      .then(function (data) {\n        if (data) {\n          console.log(\"데이터베이스에 접속을 하였습니다.\");\n          console.log(\n            \"부처님처럼의 정보는 다음과 같습니다 : \" +\n              JSON.stringify(data.data())\n          );\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      })\n      .catch(function (err) {\n        console.log(\"발생한 에러는 다음과 같습니다 : \" + err);\n      });\n  };\n\n  let createDatabase = () => {\n    firestore\n      .collection(\"project\")\n      .doc(name)\n      .get()\n      .then(function (docName) {\n        if (docName.data() !== undefined) {\n          alert(\"중복된 프로젝트명입니다. 다른 프로젝트 이름을 정해주세요\");\n        } else {\n          firestore\n            .collection(\"project\")\n            .doc(name)\n            .set({\n              comment: comment,\n              finish: finish,\n              name: name,\n              party: party,\n              signed: signed,\n              skill: skill,\n              term: term,\n            })\n            .then(function () {\n              console.log(\"등록성공\");\n            })\n            .catch(function (error) {\n              console.log(\"다음과 같은 에러가 발생했습니다 : \" + error);\n            });\n        }\n      });\n  };\n\n  let skillbutton = () => {\n    if (skill.length > 2) {\n      alert(\"기술 스택은 3개까지만 넣을 수 있어용~\");\n    } else {\n      if (skill.includes(eachSkill.toLowerCase()) === false) {\n        setSkilled(skill.concat(eachSkill.toLowerCase()));\n        setTerm(\"\");\n      } else {\n        alert(\"중복된 기술이에용~\");\n      }\n    }\n  };\n\n  let handleImageAsFile = (e) => {\n    const image = e.target.files[0];\n    setImageAsFile((imageFile) => image);\n  };\n\n  let handleFireBaseUpload = (e) => {\n    e.preventDefault();\n    console.log(\"이미지 업로드를 시작합니다\");\n    if (imageAsFile === \"\") {\n      console.error(`not an image, the image file is a ${typeof imageAsFile}`);\n    }\n    const uploadTask = storage\n      .ref(`/project/${imageAsFile.name}`)\n      .put(imageAsFile);\n    //나중에 저 project 부분을 아이디로 바꾸자\n    uploadTask.on(\n      \"state_changed\",\n      (snapShot) => {\n        console.log(snapShot);\n      },\n      (err) => {\n        console.log(err);\n      },\n      () => {\n        storage\n          .ref(\"images\")\n          .child(imageAsFile.name)\n          .getDownloadURL()\n          .then((fireBaseUrl) => {\n            setImageAsUrl((prevObject) => ({\n              ...prevObject,\n              imgUrl: fireBaseUrl,\n            }));\n          });\n      }\n    );\n  };\n\n  let getFireBaseImage = (image) => {\n    storage\n      .ref(\"project\")\n      .child(`${image}.png`)\n      .getDownloadURL()\n      .then((url) => {\n        setGetImage(url);\n      })\n      .catch((error) => {\n        console.log(\"이미지를 받아오지 못했습니다.\");\n      });\n  };\n\n  getFireBaseImage(\"kurt\");\n\n  return (\n    <div className={styles.regist}>\n      <div className={styles.projectint}>\n        <span>\n          <p>\n            프로젝트 이름 :{\" \"}\n            <input\n              type=\"text\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            ></input>\n          </p>\n          <div>\n            <form onSubmit={handleFireBaseUpload}>\n              <input\n                type=\"file\"\n                accept=\"image/png/jpg\"\n                onChange={handleImageAsFile}\n              />\n              <button>이미지 업로드</button>\n            </form>\n          </div>\n          <div>\n            <img src={getImage} />\n          </div>\n        </span>\n        <span>\n          <p>\n            모집인원 :{\" \"}\n            <input\n              type=\"number\"\n              value={party}\n              onChange={(e) => setParty(e.target.value)}\n            ></input>\n          </p>\n          <p>\n            현재 등록 인원 :{\" \"}\n            <input\n              type=\"number\"\n              value={signed}\n              onChange={(e) => setSigned(e.target.value)}\n            ></input>\n          </p>\n          <p>\n            프로젝트 기간 :{\" \"}\n            <input\n              type=\"date\"\n              value={term}\n              onChange={(e) => setTerm(e.target.value)}\n            ></input>\n          </p>\n\n          <div>\n            기술 스택 :{\" \"}\n            <input\n              type=\"text\"\n              value={eachSkill}\n              onChange={(e) => setEachSkill(e.target.value)}\n            ></input>\n            <button onClick={skillbutton}>클릭</button>\n            <div className={styles.teckstack}>\n              <li>\n                기술스택1 : <div style={{ width: \"50%\" }}>{skill[0]}</div>\n              </li>\n              <li>\n                기술스택1 : <div style={{ width: \"50%\" }}>{skill[1]}</div>\n              </li>\n              <li>\n                기술스택1 : <div style={{ width: \"50%\" }}>{skill[2]}</div>\n              </li>\n            </div>\n          </div>\n        </span>\n      </div>\n\n      <p>\n        프로젝트 개요 :{\" \"}\n        <div style={{ paddingTop: \"20px\" }}>\n          <textarea\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            style={{ width: \"50vh\", height: \"15vh\" }}\n          ></textarea>\n        </div>\n      </p>\n      <div className={styles.registbtn}>\n        <span>\n          <button onClick={createDatabase}>등록하기</button>\n        </span>\n        <span style={{ paddingLeft: \"20px\" }}>\n          <button onClick={() => history.push(\"/\")}>취소</button>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Regist;\n","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/firebase.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/MyPage.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/MainPage.js",[],["59","60"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/ThirdBlock.js",["61"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/index.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["62"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/SecondBlock.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":20},{"ruleId":"64","severity":1,"message":"68","line":2,"column":22,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":111,"column":21,"nodeType":"71","endLine":119,"endColumn":22},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"64","severity":1,"message":"76","line":8,"column":18,"nodeType":"66","messageId":"67","endLine":8,"endColumn":27},{"ruleId":"64","severity":1,"message":"77","line":9,"column":10,"nodeType":"66","messageId":"67","endLine":9,"endColumn":14},{"ruleId":"64","severity":1,"message":"78","line":9,"column":16,"nodeType":"66","messageId":"67","endLine":9,"endColumn":23},{"ruleId":"64","severity":1,"message":"79","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":15},{"ruleId":"64","severity":1,"message":"80","line":10,"column":17,"nodeType":"66","messageId":"67","endLine":10,"endColumn":25},{"ruleId":"64","severity":1,"message":"81","line":27,"column":10,"nodeType":"66","messageId":"67","endLine":27,"endColumn":20},{"ruleId":"64","severity":1,"message":"82","line":31,"column":7,"nodeType":"66","messageId":"67","endLine":31,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":173,"column":13,"nodeType":"71","endLine":173,"endColumn":35},{"ruleId":"72","replacedBy":"83"},{"ruleId":"74","replacedBy":"84"},{"ruleId":"69","severity":1,"message":"70","line":8,"column":9,"nodeType":"71","endLine":8,"endColumn":60},{"ruleId":"69","severity":1,"message":"70","line":21,"column":11,"nodeType":"71","endLine":21,"endColumn":28},{"ruleId":"69","severity":1,"message":"70","line":42,"column":20,"nodeType":"71","endLine":42,"endColumn":57},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'setFinish' is assigned a value but never used.","'host' is assigned a value but never used.","'setHost' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'imageAsUrl' is assigned a value but never used.","'readDatabase' is assigned a value but never used.",["85"],["86"],"no-global-assign","no-unsafe-negation"]