[{"/home/nell/project/forum_client/forum_project/src/component/App.js":"1","/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"2","/home/nell/project/forum_client/forum_project/src/component/MyPage/WishList.js":"3","/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js":"4","/home/nell/project/forum_client/forum_project/src/component/MyPage/Profile.js":"5","/home/nell/project/forum_client/forum_project/src/index.js":"6","/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"7","/home/nell/project/forum_client/forum_project/src/component/Guide/Guide.js":"8","/home/nell/project/forum_client/forum_project/src/component/Project/Project.js":"9","/home/nell/project/forum_client/forum_project/src/component/MainPage/MainPage.js":"10","/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js":"11"},{"size":2360,"mtime":1611214682191,"results":"12","hashOfConfig":"13"},{"size":1603,"mtime":1611214442663,"results":"14","hashOfConfig":"13"},{"size":615,"mtime":1611117082831,"results":"15","hashOfConfig":"13"},{"size":411,"mtime":1611117082831,"results":"16","hashOfConfig":"13"},{"size":956,"mtime":1611117082831,"results":"17","hashOfConfig":"13"},{"size":207,"mtime":1611063682030,"results":"18","hashOfConfig":"13"},{"size":1889,"mtime":1611214442663,"results":"19","hashOfConfig":"13"},{"size":788,"mtime":1611063682030,"results":"20","hashOfConfig":"13"},{"size":2550,"mtime":1611215741078,"results":"21","hashOfConfig":"13"},{"size":233,"mtime":1611211238733,"results":"22","hashOfConfig":"13"},{"size":9715,"mtime":1611558762596,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"158mqmo",{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nell/project/forum_client/forum_project/src/component/App.js",["54","55","56","57","58","59"],"import \"../css/App.css\";\nimport React, { useState } from \"react\";\nimport Menu from \"../component/Menu\";\nimport Mypage from \"../component/MyPage/MyPage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport { storage } from \"../firebase\";\nimport { useEffect } from \"react\";\n\nlet dataFire = null;\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n\t});\n\t\n\n\tfunction delay(ms){\n\t\treturn new Promise((resolve, reject) =>{ \n\t\t\tsetTimeout(resolve, ms)\n\t\t})\n\t}\n\n\n\tlet getFireBaseImage = (image) => {\n\t\treturn storage.ref('project').child(image).getDownloadURL().then((url) => {\n\t\t\treturn url\n\t\t}).catch((error) => {\n\t\t\tconsole.log('이미지를 받아오지 못했습니다.'+error)\n\t\t})\n\t}\n\n\n\n\tuseEffect(async ()=> {\n\t\tlet result = await getFirestoreData();\n\t\tawait delay(1000)\n\t\tlet resultString = JSON.stringify(result)//로컬스토리지에는 문자열만 넣을 수 있음\n\t\tlocalStorage.setItem(\"fireStoreData\", resultString)\n\t\tdataFire = localStorage.getItem(\"fireStoreData\")\n\t\tconsole.log(dataFire)\n\t},[])\n\n\n\n\tlet getFirestoreData = async () => {\n\t\tlet eachStore = []\n\t\tlet result = await firestore.collection(\"project\").get().then(function (querySnapshot) {               //result는 await를 하기 위해서 만들어낸 변수\n\t\t\tquerySnapshot.forEach(async function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n\t\t\t\t//console.log(doc.id, \" => \", doc.data())\n\t\t\t\tconsole.log(\"요청하는 이미지는 다음과 같습니다 :\" + doc.data().image)\n\t\t\t\tlet image = await getFireBaseImage(doc.data().image)\n\t\t\t\tlet eachData = {\n\t\t\t\t\t'comment' : doc.data().comment,\n\t\t\t\t\t'finish' : doc.data().finish,\n\t\t\t\t\t'host' : doc.data().host,\n\t\t\t\t\t'image' : image,\n\t\t\t\t\t'name' : doc.data().name,\n\t\t\t\t\t'party' : doc.data().party,\n\t\t\t\t\t'signed' : doc.data().signed,\n\t\t\t\t\t'skill' : doc.data().skill,\n\t\t\t\t\t'term' : doc.data().term\n\t\t\t\t}\n\t\t\t\teachStore.push(eachData)\n\t\t\t});\n\t\t})\n\t\treturn eachStore\n\t}\n\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu login={login} setLogin={setLogin}></Menu>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["60","61"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",["62","63","64","65","66"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/WishList.js",[],["67","68"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js",[],["69","70"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/Profile.js",["71","72","73","74"],"import React from \"react\";\nimport styles from \"../../css/MyPage/Profile.module.css\";\nimport firebase from \"firebase/app\";\nimport auth from \"firebase/auth\";\nconst Profile = (props) => {\n  let user = firebase.auth().currentUser;\n  let name, email, photoUrl, uid, emailVerified;\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    photoUrl = user.photoURL;\n    emailVerified = user.emailVerified;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n  return (\n    <div className={styles.header}>\n      <div>\n        <img src={photoUrl} style={{ borderRadius: \"50px\" }}></img>\n      </div>\n      <div style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\n        {name} 님, 환영합니다.\n      </div>\n      <div>이메일: {email}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/nell/project/forum_client/forum_project/src/index.js",[],"/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["75","76","77","78"],"import React from \"react\";\nimport { useLocation } from \"react-router\";\nimport styles from \"../../css/Project/ProjectDetail.module.css\";\nimport { useHistory } from \"react-router-dom\";\nconst ProjectDetail = () => {\n  const location = useLocation();\n  const photo = location.state.photo;\n  const name = location.state.name;\n  const period = location.state.period;\n  const person = location.state.person;\n  const lang = location.state.lang;\n\n  const history = useHistory();\n\n  const dataFire = JSON.parse(localStorage.getItem(\"fireStoreData\")).filter(\n    (eachData) => {\n      if (eachData.name === name) return eachData;\n    }\n  );\n  console.log(\"파이어베이스 데이터(필터링):\", dataFire);\n  const term = dataFire[0].term;\n  const party = dataFire[0].party;\n  const comment = dataFire[0].comment;\n  return (\n    <>\n      <div className={styles.projectDetail}>\n        <div className={styles.header}>\n          <h2>프로젝트명:{name}</h2>\n        </div>\n        <div className={styles.projectEx}>\n          <img src={photo}></img>\n\n          <span className={styles.text}>\n            <h3>사용 언어: {lang}</h3>\n            <h3>예상기간:{term}</h3>\n            <h3>예상인원:{party}</h3>\n            <h3>현재지원자:</h3>\n          </span>\n        </div>\n        <div className={styles.explain}>\n          <h3>개요:{comment}</h3>\n        </div>\n        <div className={styles.btn}>\n          <span>\n            <button>관심 프로젝트 담기</button>\n          </span>\n          <span>\n            <button style={{ marginLeft: \"20px\" }}>지원하기</button>\n          </span>\n          <span>\n            <button\n              style={{ marginLeft: \"20px\" }}\n              onClick={() => history.goBack()}\n            >\n              취소\n            </button>\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProjectDetail;\n","/home/nell/project/forum_client/forum_project/src/component/Guide/Guide.js",[],"/home/nell/project/forum_client/forum_project/src/component/Project/Project.js",["79","80","81","82","83","84","85","86"],"import styles from \"../../css/Project/Project.module.css\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport firebase from \"firebase/app\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nlet photo = null;\nlet name = null;\nlet period = null;\nlet person = null;\nlet lang = null;\n\n\n\nfunction Project (props) {\n\n\tlet json = localStorage.getItem(\"fireStoreData\")\n\tlet localData = JSON.parse(json) || [];\n\tlet [dataFire, setDataFire] = useState(localData)\n\t\n\t/*function delay(ms){\n\t\treturn new Promise((resolve, reject) =>{\n\t\t\tsetTimeout(resolve, ms)\n\t\t})\n\t}*/\n\n\n\t/*useEffect(async ()=> {\n\t\tawait delay(2000)\n\t\tconsole.log(\"루삥뽕\"+JSON.stringify(dataFire))\n\t},[])*/\n\n\n\tlet history = useHistory();\n\t\n  let handleClick = (e) => {\n    console.log(e.target.person);\n    photo = e.target.src;\n    name = e.target.name;\n    period = String(e.target.period);\n    person = String(e.target.person);\n    lang = e.target.lang;\n    history.push({\n      pathname: \"/projectdetail\",\n      state: {\n        photo: photo,\n        name: name,\n        period: period,\n        person: person,\n        lang: lang,\n      },\n    });\n  };\n\t\n\t\n\t\t\n\tconst settings = {\n    dots: true,\n    infinite: true,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    arrow: true,\n    className: \"slides\",\n  };\n\n  return (\n    <div className={styles.project}>\n      <h2>프로젝트 열람</h2>\n      <Slider {...settings}>\n        {dataFire.map((eachData) => {\n          return (\n            <div className={styles.cardwraper}>\n              <div className={styles.card}>\n                <div className={styles.card_img}>\n                  <img\n                    src={eachData.image}\n                    name={eachData.name}\n                    period={eachData.term}\n                    person={eachData.party}\n                    lang={eachData.skill}\n                    className={styles.photo}\n                    onClick={handleClick}\n                  ></img>\n                </div>\n              </div>\n              <ul>\n                <li>프로젝트 이름:{eachData.name}</li>\n                <li>예상 기간: {eachData.term}</li>\n                <li>현재 인원: {eachData.party}</li>\n                <li>사용 언어: {eachData.skill}</li>\n              </ul>\n            </div>\n          );\n        })}\n      </Slider>\n    </div>\n  );\n}\n\n\nexport default Project;",["87","88"],"/home/nell/project/forum_client/forum_project/src/component/MainPage/MainPage.js",[],"/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js",["89","90","91","92"],{"ruleId":"93","severity":1,"message":"94","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":7,"column":35,"nodeType":"95","messageId":"96","endLine":7,"endColumn":40},{"ruleId":"93","severity":1,"message":"98","line":7,"column":42,"nodeType":"95","messageId":"96","endLine":7,"endColumn":48},{"ruleId":"99","severity":1,"message":"100","line":43,"column":12,"nodeType":"101","endLine":50,"endColumn":3},{"ruleId":"99","severity":1,"message":"102","line":50,"column":4,"nodeType":"103","endLine":50,"endColumn":6,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"105","line":56,"column":7,"nodeType":"95","messageId":"96","endLine":56,"endColumn":13},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"93","severity":1,"message":"110","line":18,"column":5,"nodeType":"95","messageId":"96","endLine":18,"endColumn":9},{"ruleId":"93","severity":1,"message":"111","line":20,"column":5,"nodeType":"95","messageId":"96","endLine":20,"endColumn":13},{"ruleId":"93","severity":1,"message":"112","line":21,"column":5,"nodeType":"95","messageId":"96","endLine":21,"endColumn":18},{"ruleId":"93","severity":1,"message":"113","line":22,"column":5,"nodeType":"95","messageId":"96","endLine":22,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":43,"column":17,"nodeType":"116","endLine":43,"endColumn":66},{"ruleId":"106","replacedBy":"117"},{"ruleId":"108","replacedBy":"118"},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","replacedBy":"120"},{"ruleId":"93","severity":1,"message":"121","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":12},{"ruleId":"93","severity":1,"message":"112","line":13,"column":5,"nodeType":"95","messageId":"96","endLine":13,"endColumn":18},{"ruleId":"93","severity":1,"message":"113","line":14,"column":5,"nodeType":"95","messageId":"96","endLine":14,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":21,"column":9,"nodeType":"116","endLine":21,"endColumn":62},{"ruleId":"93","severity":1,"message":"122","line":9,"column":9,"nodeType":"95","messageId":"96","endLine":9,"endColumn":15},{"ruleId":"93","severity":1,"message":"123","line":10,"column":9,"nodeType":"95","messageId":"96","endLine":10,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":16,"column":16,"nodeType":"101","messageId":"126","endLine":16,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":31,"column":11,"nodeType":"116","endLine":31,"endColumn":28},{"ruleId":"93","severity":1,"message":"127","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":20},{"ruleId":"93","severity":1,"message":"128","line":2,"column":22,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"129","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"130","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":19},{"ruleId":"93","severity":1,"message":"131","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":17},{"ruleId":"93","severity":1,"message":"132","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":19},{"ruleId":"93","severity":1,"message":"133","line":23,"column":17,"nodeType":"95","messageId":"96","endLine":23,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":79,"column":19,"nodeType":"116","endLine":87,"endColumn":20},{"ruleId":"106","replacedBy":"134"},{"ruleId":"108","replacedBy":"135"},{"ruleId":"93","severity":1,"message":"136","line":2,"column":20,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"137","line":2,"column":28,"nodeType":"95","messageId":"96","endLine":2,"endColumn":39},{"ruleId":"93","severity":1,"message":"138","line":11,"column":18,"nodeType":"95","messageId":"96","endLine":11,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":227,"column":15,"nodeType":"116","endLine":227,"endColumn":64},"no-unused-vars","'Mypage' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getFirestoreData'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'result' is assigned a value but never used.","no-native-reassign",["140"],"no-negated-in-lhs",["141"],"'name' is assigned a value but never used.","'photoUrl' is assigned a value but never used.","'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["140"],["141"],["140"],["141"],"'auth' is defined but never used.","'period' is assigned a value but never used.","'person' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'withRouter' is defined but never used.","'Link' is defined but never used.","'firebase' is defined but never used.","'firestore' is defined but never used.","'storage' is defined but never used.","'useEffect' is defined but never used.","'setDataFire' is assigned a value but never used.",["140"],["141"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'setFinish' is assigned a value but never used.",{"desc":"142","fix":"143"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getFirestoreData]",{"range":"144","text":"145"},[1224,1226],"[getFirestoreData]"]