[{"/home/nell/project/forum_client/forum_project/src/component/App.js":"1","/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js":"2","/home/nell/project/forum_client/forum_project/src/component/Project/Project.js":"3","/home/nell/project/forum_client/forum_project/src/component/MainPage/SecondBlock.js":"4","/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"5","/home/nell/project/forum_client/forum_project/src/component/MyPage/MyPage.js":"6","/home/nell/project/forum_client/forum_project/src/component/MainPage/ThirdBlock.js":"7","/home/nell/project/forum_client/forum_project/src/component/MainPage/FirstBlock.js":"8"},{"size":2586,"mtime":1611075419971,"results":"9","hashOfConfig":"10"},{"size":8027,"mtime":1611063682030,"results":"11","hashOfConfig":"10"},{"size":2472,"mtime":1611078054107,"results":"12","hashOfConfig":"10"},{"size":773,"mtime":1611076285206,"results":"13","hashOfConfig":"10"},{"size":1571,"mtime":1611077250865,"results":"14","hashOfConfig":"10"},{"size":191,"mtime":1611063682030,"results":"15","hashOfConfig":"10"},{"size":343,"mtime":1611063682030,"results":"16","hashOfConfig":"10"},{"size":1713,"mtime":1611063682030,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"158mqmo",{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nell/project/forum_client/forum_project/src/component/App.js",["37","38","39","40","41","42","43"],"/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js",["44","45","46","47"],"import styles from \"../../css/Regist/Regist.module.css\";\nimport { useState, useRef, useCallback } from \"react\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Regist() {\n  const [comment, setComment] = useState(\"\");\n  const [finish, setFinish] = useState(false);\n  const [host, setHost] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [party, setParty] = useState(0);\n  const [signed, setSigned] = useState(0);\n  const [skill, setSkilled] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const history = useHistory();\n\n  //하나의 기술 문자열을 담기 위한 샅애\n  const [eachSkill, setEachSkill] = useState(\"\");\n\n  //이미지를 업로드 하기 위한 상태들\n  let allInputs = { imgUrl: \"\" };\n  const [imageAsFile, setImageAsFile] = useState(\"\");\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n\t\tif (user) {\n      //console.log(user.displayName);\n      //console.log(user.email);\n      setHost(user.email);\n    } else {\n      console.log(\"유저 없는 뎁쇼\");\n    }\n\t});\n\t\n\n\n\tfunction delay(ms){\n\t\treturn new Promise((resolve, reject) =>{                        //promise 객체 반환, async도 promise를 다루는 기술이란 것을 잊지 말것\n\t\t\tsetTimeout(resolve, ms)\n\t\t})\n\t}\n\n\n\n  let createDatabase = async () => {\n\t\tlet result = await handleFireBaseUpload(); //여기서 일단 이미지를 올린다.\n\t\tawait delay(2500)\n    if (result === false) {\n      //2차 안전장치\n      console.log(\"이미지를 올리지 않아서 아무 일도 안생길 거임\");\n    } else if (!comment || finish || !name || !party || !eachSkill) {\n      alert(\"모든 항목은 필수입니다\");\n      window.location.reload();\n    } else {\n      firestore\n        .collection(\"project\")\n        .doc(name)\n        .get()\n        .then(function (docName) {\n          if (docName.data() !== undefined) {\n            alert(\"중복된 프로젝트명입니다. 다른 프로젝트 이름을 정해주세요\");\n            window.location.reload();\n          } else if (name + \".png\" !== imageAsFile.name) {\n            alert(\"프로젝트 이름과 이미지 파일은 이름이 같아야 합니다.\");\n            window.location.reload();\n          } else {\n            firestore\n              .collection(\"project\")\n              .doc(name)\n              .set({\n                host: host,\n                comment: comment,\n                finish: finish,\n                name: name,\n                party: party,\n                signed: signed,\n                skill: skill,\n                term: term,\n                image: imageAsFile.name,\n              })\n              .then(function () {\n                alert(\"프로젝트 등록에 성공했습니다\");\n                window.location.reload();\n              })\n              .catch(function (error) {\n                console.error(\"다음과 같은 에러가 발생했습니다 : \" + error);\n              });\n          }\n        });\n    }\n  };\n\n  let skillbutton = () => {\n    if (skill.length > 2) {\n      alert(\"기술 스택은 3개까지만 넣을 수 있어용~\");\n    } else {\n      if (skill.includes(eachSkill.toLowerCase()) === false) {\n        setSkilled(skill.concat(eachSkill.toLowerCase()));\n      } else {\n        alert(\"중복된 기술이에용~\");\n      }\n    }\n  };\n\n  let handleImageAsFile = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    const image = e.target.files[0];\n    reader.onloadend = () => {\n      setImageAsFile(image);\n      setImageAsUrl(reader.result);\n    };\n    reader.readAsDataURL(image);\n  };\n\n  let handleFireBaseUpload = (e) => {\n    if (imageAsFile === \"\") {\n      alert(`이미지 파일을 올려 주세요!!!`);\n      return false;\n    } else {\n\t\t\tconsole.log(\"이미지 업로드를 시작합니다\");\n\t\t\tconsole.log(\"사진이름이 뭔지 확인해볼거야\"+imageAsFile.name)\n      const uploadTask = storage.ref(`/project/${imageAsFile.name}`).put(imageAsFile);\n      uploadTask.on(\"state_changed\",\n        (snapShot) => {\n          console.log(snapShot);\n        },(err) => {\n          console.log(err);\n        },() => {\n          storage.ref(\"project\").child(imageAsFile.name).getDownloadURL()\n            .then((fireBaseUrl) => {\n\t\t\t\t\t\t\tsetImageAsUrl((prevObject) => ({...prevObject,imgUrl: fireBaseUrl,}));\n\t\t\t\t\t\t\tconsole.log(\"유알엘이 뭔지 확인해볼거야\"+fireBaseUrl)\n\t\t\t\t \t\t\tconsole.log(\"사진이름이 뭔지 확인해볼거야\"+imageAsFile.name)\n\t\t\t\t \t\t\tfirestore.collection(\"project\").doc(imageAsFile.name).update({\n\t\t\t\t\t \t\t\timage : fireBaseUrl\n\t\t\t\t \t\t\t}).then(function(){\n\t\t\t\t\t \t\t\tconsole.log('파이어베이스 업데이트 완료 이미지 url 파이어스토어에 업로드')\n\t\t\t\t \t\t\t}).catch(function (err){\n\t\t\t\t\t \t\t\t//alert(err)\n\t\t\t\t \t\t})\n          });\n        }\n      );\n      return true;\n    }\n  };\n\n  return (\n    <div className={styles.regist}>\n      <div className={styles.projectint}>\n        <span>\n          <p>\n            프로젝트 이름 :{\" \"}\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></input>\n          </p>\n          <div>\n            <form onSubmit={handleFireBaseUpload}>\n              <input\n                type=\"file\"\n                accept=\"image/png\"\n                onChange={handleImageAsFile}\n              />\n            </form>\n          </div>\n          <div>\n            {imageAsFile !== \"\" ? (\n              <img src={imageAsUrl} style={{ width: \"100%\" }} />\n            ) : (\n              <span>\n                png 파일을 선택해주세요. 파일의 이름은 프로젝트의 이름과\n                동일해야 합니다.\n              </span>\n            )}\n          </div>\n        </span>\n        <span>\n          <p>\n            모집인원 :{\" \"}\n            <input\n              type=\"number\"\n              value={party}\n              onChange={(e) => setParty(e.target.value)}\n            ></input>\n          </p>\n          <p>\n            현재 등록 인원 :{\" \"}\n            <input\n              type=\"number\"\n              value={signed}\n              onChange={(e) => setSigned(e.target.value)}\n            ></input>\n          </p>\n          <p>\n            프로젝트 기간 :{\" \"}\n            <input\n              type=\"date\"\n              value={term}\n              onChange={(e) => setTerm(e.target.value)}\n            ></input>\n          </p>\n\n          <div>\n            기술 스택 :{\" \"}\n            <input\n              type=\"text\"\n              value={eachSkill}\n              onChange={(e) => setEachSkill(e.target.value)}\n            ></input>\n            <button onClick={skillbutton}>클릭</button>\n            <div className={styles.teckstack}>\n              <li>\n                기술스택1 : <div style={{ width: \"50%\" }}>{skill[0]}</div>\n              </li>\n              <li>\n                기술스택2 : <div style={{ width: \"50%\" }}>{skill[1]}</div>\n              </li>\n              <li>\n                기술스택3 : <div style={{ width: \"50%\" }}>{skill[2]}</div>\n              </li>\n            </div>\n          </div>\n        </span>\n      </div>\n\n      <p>\n        프로젝트 개요 :{\" \"}\n        <div style={{ paddingTop: \"20px\" }}>\n          <textarea\n            type=\"text\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            style={{ width: \"50vh\", height: \"15vh\" }}\n          ></textarea>\n        </div>\n      </p>\n      <div className={styles.registbtn}>\n        <span>\n          <button onClick={createDatabase}>등록하기</button>\n        </span>\n        <span style={{ paddingLeft: \"20px\" }}>\n          <button onClick={() => history.push(\"/\")}>취소</button>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Regist;\n",["48","49"],"/home/nell/project/forum_client/forum_project/src/component/Project/Project.js",["50","51","52","53","54","55","56","57"],"/home/nell/project/forum_client/forum_project/src/component/MainPage/SecondBlock.js",["58","59"],"/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["60"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/MyPage.js",[],["61","62"],"/home/nell/project/forum_client/forum_project/src/component/MainPage/ThirdBlock.js",["63"],"/home/nell/project/forum_client/forum_project/src/component/MainPage/FirstBlock.js",[],{"ruleId":"64","severity":1,"message":"65","line":6,"column":35,"nodeType":"66","messageId":"67","endLine":6,"endColumn":40},{"ruleId":"64","severity":1,"message":"68","line":6,"column":42,"nodeType":"66","messageId":"67","endLine":6,"endColumn":48},{"ruleId":"64","severity":1,"message":"69","line":16,"column":9,"nodeType":"66","messageId":"67","endLine":16,"endColumn":17},{"ruleId":"64","severity":1,"message":"70","line":16,"column":19,"nodeType":"66","messageId":"67","endLine":16,"endColumn":30},{"ruleId":"71","severity":1,"message":"72","line":48,"column":12,"nodeType":"73","endLine":53,"endColumn":3},{"ruleId":"71","severity":1,"message":"74","line":53,"column":4,"nodeType":"75","endLine":53,"endColumn":6,"suggestions":"76"},{"ruleId":"64","severity":1,"message":"77","line":59,"column":7,"nodeType":"66","messageId":"67","endLine":59,"endColumn":13},{"ruleId":"64","severity":1,"message":"78","line":2,"column":20,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},{"ruleId":"64","severity":1,"message":"79","line":2,"column":28,"nodeType":"66","messageId":"67","endLine":2,"endColumn":39},{"ruleId":"64","severity":1,"message":"80","line":11,"column":18,"nodeType":"66","messageId":"67","endLine":11,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":175,"column":15,"nodeType":"83","endLine":175,"endColumn":65},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"64","severity":1,"message":"88","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":20},{"ruleId":"64","severity":1,"message":"89","line":2,"column":22,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},{"ruleId":"64","severity":1,"message":"90","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":16},{"ruleId":"64","severity":1,"message":"91","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":19},{"ruleId":"64","severity":1,"message":"92","line":6,"column":10,"nodeType":"66","messageId":"67","endLine":6,"endColumn":17},{"ruleId":"64","severity":1,"message":"93","line":7,"column":17,"nodeType":"66","messageId":"67","endLine":7,"endColumn":25},{"ruleId":"64","severity":1,"message":"94","line":8,"column":10,"nodeType":"66","messageId":"67","endLine":8,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":76,"column":19,"nodeType":"83","endLine":84,"endColumn":20},{"ruleId":"64","severity":1,"message":"93","line":3,"column":17,"nodeType":"66","messageId":"67","endLine":3,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":28,"column":20,"nodeType":"83","endLine":28,"endColumn":62},{"ruleId":"81","severity":1,"message":"82","line":23,"column":11,"nodeType":"83","endLine":23,"endColumn":28},{"ruleId":"84","replacedBy":"95"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"81","severity":1,"message":"82","line":8,"column":9,"nodeType":"83","endLine":8,"endColumn":60},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'fireData' is assigned a value but never used.","'setFireData' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getFirestoreData'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'result' is assigned a value but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'setFinish' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'withRouter' is defined but never used.","'Link' is defined but never used.","'firebase' is defined but never used.","'firestore' is defined but never used.","'storage' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["98"],["99"],{"desc":"100","fix":"101"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getFirestoreData]",{"range":"102","text":"103"},[1333,1335],"[getFirestoreData]"]