[{"/home/nell/project/forum_client/forum_project/src/component/App.js":"1","/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"2","/home/nell/project/forum_client/forum_project/src/component/MyPage/WishList.js":"3","/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js":"4","/home/nell/project/forum_client/forum_project/src/component/MyPage/Profile.js":"5","/home/nell/project/forum_client/forum_project/src/index.js":"6","/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"7"},{"size":2360,"mtime":1611214682191,"results":"8","hashOfConfig":"9"},{"size":1603,"mtime":1611214442663,"results":"10","hashOfConfig":"9"},{"size":615,"mtime":1611117082831,"results":"11","hashOfConfig":"9"},{"size":411,"mtime":1611117082831,"results":"12","hashOfConfig":"9"},{"size":956,"mtime":1611117082831,"results":"13","hashOfConfig":"9"},{"size":207,"mtime":1611063682030,"results":"14","hashOfConfig":"9"},{"size":1889,"mtime":1611214442663,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"158mqmo",{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nell/project/forum_client/forum_project/src/component/App.js",["34","35","36","37","38","39"],"import \"../css/App.css\";\nimport React, { useState } from \"react\";\nimport Menu from \"../component/Menu\";\nimport Mypage from \"../component/MyPage/MyPage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport { storage } from \"../firebase\";\nimport { useEffect } from \"react\";\n\nlet dataFire = null;\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n\t});\n\t\n\n\tfunction delay(ms){\n\t\treturn new Promise((resolve, reject) =>{ \n\t\t\tsetTimeout(resolve, ms)\n\t\t})\n\t}\n\n\n\tlet getFireBaseImage = (image) => {\n\t\treturn storage.ref('project').child(image).getDownloadURL().then((url) => {\n\t\t\treturn url\n\t\t}).catch((error) => {\n\t\t\tconsole.log('이미지를 받아오지 못했습니다.'+error)\n\t\t})\n\t}\n\n\n\n\tuseEffect(async ()=> {\n\t\tlet result = await getFirestoreData();\n\t\tawait delay(1000)\n\t\tlet resultString = JSON.stringify(result)//로컬스토리지에는 문자열만 넣을 수 있음\n\t\tlocalStorage.setItem(\"fireStoreData\", resultString)\n\t\tdataFire = localStorage.getItem(\"fireStoreData\")\n\t\tconsole.log(dataFire)\n\t},[])\n\n\n\n\tlet getFirestoreData = async () => {\n\t\tlet eachStore = []\n\t\tlet result = await firestore.collection(\"project\").get().then(function (querySnapshot) {               //result는 await를 하기 위해서 만들어낸 변수\n\t\t\tquerySnapshot.forEach(async function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n\t\t\t\t//console.log(doc.id, \" => \", doc.data())\n\t\t\t\tconsole.log(\"요청하는 이미지는 다음과 같습니다 :\" + doc.data().image)\n\t\t\t\tlet image = await getFireBaseImage(doc.data().image)\n\t\t\t\tlet eachData = {\n\t\t\t\t\t'comment' : doc.data().comment,\n\t\t\t\t\t'finish' : doc.data().finish,\n\t\t\t\t\t'host' : doc.data().host,\n\t\t\t\t\t'image' : image,\n\t\t\t\t\t'name' : doc.data().name,\n\t\t\t\t\t'party' : doc.data().party,\n\t\t\t\t\t'signed' : doc.data().signed,\n\t\t\t\t\t'skill' : doc.data().skill,\n\t\t\t\t\t'term' : doc.data().term\n\t\t\t\t}\n\t\t\t\teachStore.push(eachData)\n\t\t\t});\n\t\t})\n\t\treturn eachStore\n\t}\n\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu login={login} setLogin={setLogin}></Menu>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["40","41"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",["42","43","44","45","46"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/WishList.js",[],["47","48"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js",[],"/home/nell/project/forum_client/forum_project/src/component/MyPage/Profile.js",["49","50","51","52"],"import React from \"react\";\nimport styles from \"../../css/MyPage/Profile.module.css\";\nimport firebase from \"firebase/app\";\nimport auth from \"firebase/auth\";\nconst Profile = (props) => {\n  let user = firebase.auth().currentUser;\n  let name, email, photoUrl, uid, emailVerified;\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    photoUrl = user.photoURL;\n    emailVerified = user.emailVerified;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n  return (\n    <div className={styles.header}>\n      <div>\n        <img src={photoUrl} style={{ borderRadius: \"50px\" }}></img>\n      </div>\n      <div style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\n        {name} 님, 환영합니다.\n      </div>\n      <div>이메일: {email}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/nell/project/forum_client/forum_project/src/index.js",[],"/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["53","54","55","56"],{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":7,"column":35,"nodeType":"59","messageId":"60","endLine":7,"endColumn":40},{"ruleId":"57","severity":1,"message":"62","line":7,"column":42,"nodeType":"59","messageId":"60","endLine":7,"endColumn":48},{"ruleId":"63","severity":1,"message":"64","line":43,"column":12,"nodeType":"65","endLine":50,"endColumn":3},{"ruleId":"63","severity":1,"message":"66","line":50,"column":4,"nodeType":"67","endLine":50,"endColumn":6,"suggestions":"68"},{"ruleId":"57","severity":1,"message":"69","line":56,"column":7,"nodeType":"59","messageId":"60","endLine":56,"endColumn":13},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"57","severity":1,"message":"74","line":18,"column":5,"nodeType":"59","messageId":"60","endLine":18,"endColumn":9},{"ruleId":"57","severity":1,"message":"75","line":20,"column":5,"nodeType":"59","messageId":"60","endLine":20,"endColumn":13},{"ruleId":"57","severity":1,"message":"76","line":21,"column":5,"nodeType":"59","messageId":"60","endLine":21,"endColumn":18},{"ruleId":"57","severity":1,"message":"77","line":22,"column":5,"nodeType":"59","messageId":"60","endLine":22,"endColumn":8},{"ruleId":"78","severity":1,"message":"79","line":43,"column":17,"nodeType":"80","endLine":43,"endColumn":66},{"ruleId":"70","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"57","severity":1,"message":"83","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":12},{"ruleId":"57","severity":1,"message":"76","line":13,"column":5,"nodeType":"59","messageId":"60","endLine":13,"endColumn":18},{"ruleId":"57","severity":1,"message":"77","line":14,"column":5,"nodeType":"59","messageId":"60","endLine":14,"endColumn":8},{"ruleId":"78","severity":1,"message":"79","line":21,"column":9,"nodeType":"80","endLine":21,"endColumn":62},{"ruleId":"57","severity":1,"message":"84","line":9,"column":9,"nodeType":"59","messageId":"60","endLine":9,"endColumn":15},{"ruleId":"57","severity":1,"message":"85","line":10,"column":9,"nodeType":"59","messageId":"60","endLine":10,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":16,"column":16,"nodeType":"65","messageId":"88","endLine":16,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":31,"column":11,"nodeType":"80","endLine":31,"endColumn":28},"no-unused-vars","'Mypage' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getFirestoreData'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'result' is assigned a value but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'name' is assigned a value but never used.","'photoUrl' is assigned a value but never used.","'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["90"],["91"],"'auth' is defined but never used.","'period' is assigned a value but never used.","'person' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd",{"desc":"92","fix":"93"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getFirestoreData]",{"range":"94","text":"95"},[1224,1226],"[getFirestoreData]"]