[{"/home/jihyun/codestates/project/forum_client/forum_project/src/component/App.js":"1","/home/jihyun/codestates/project/forum_client/forum_project/src/component/Menu.js":"2","/home/jihyun/codestates/project/forum_client/forum_project/src/component/Guide/Guide.js":"3","/home/jihyun/codestates/project/forum_client/forum_project/src/component/Regist/Regist.js":"4","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MainPage/FirstBlock.js":"5","/home/jihyun/codestates/project/forum_client/forum_project/src/component/Project/Project.js":"6","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/MyPage.js":"7","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"8","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/MyProjectList.js":"9","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/MyProjectListDetail.js":"10","/home/jihyun/codestates/project/forum_client/forum_project/src/index.js":"11","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MainPage/MainPage.js":"12","/home/jihyun/codestates/project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"13","/home/jihyun/codestates/project/forum_client/forum_project/src/firebase.js":"14","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/Profile.js":"15","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js":"16"},{"size":2360,"mtime":1611216262344,"results":"17","hashOfConfig":"18"},{"size":5971,"mtime":1611653591570,"results":"19","hashOfConfig":"18"},{"size":788,"mtime":1611108384144,"results":"20","hashOfConfig":"18"},{"size":8419,"mtime":1611216262328,"results":"21","hashOfConfig":"18"},{"size":1713,"mtime":1610675319549,"results":"22","hashOfConfig":"18"},{"size":3193,"mtime":1611653800146,"results":"23","hashOfConfig":"18"},{"size":2279,"mtime":1611538063683,"results":"24","hashOfConfig":"18"},{"size":3096,"mtime":1611653783030,"results":"25","hashOfConfig":"18"},{"size":4986,"mtime":1611653766290,"results":"26","hashOfConfig":"18"},{"size":6943,"mtime":1611653775327,"results":"27","hashOfConfig":"18"},{"size":207,"mtime":1610675319549,"results":"28","hashOfConfig":"18"},{"size":233,"mtime":1611216262324,"results":"29","hashOfConfig":"18"},{"size":4878,"mtime":1611653591570,"results":"30","hashOfConfig":"18"},{"size":677,"mtime":1610693311856,"results":"31","hashOfConfig":"18"},{"size":993,"mtime":1611653780961,"results":"32","hashOfConfig":"18"},{"size":450,"mtime":1611653748624,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1b813wj",{"filePath":"36","messages":"37","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/jihyun/codestates/project/forum_client/forum_project/src/component/App.js",["70","71","72","73","74","75"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/Menu.js",["76","77","78","79","80","81","82","83","84","85","86","87"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/Guide/Guide.js",[],["88","89"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/Regist/Regist.js",["90","91","92","93"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MainPage/FirstBlock.js",[],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/Project/Project.js",["94","95","96","97","98","99","100","101"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/MyPage.js",["102"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",["103","104","105","106","107","108","109","110","111","112","113"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/MyProjectList.js",["114","115","116","117","118","119","120","121","122"],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/MyProjectListDetail.js",["123","124","125","126","127","128","129","130","131","132"],"import styles from \"../../css/MyPage/MyProjectListDetail.module.css\";\nimport { useState, useRef, useCallback } from \"react\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction MyProjectListDetail() {\n  //넘어온 프로젝트 이름을 통해 데이터베이스에서 검색\n  const location = useLocation();\n  const projectName = location.state.name;\n  let dataFire = JSON.parse(localStorage.getItem(\"fireStoreData\"));\n  let projectData = dataFire.filter((el) => {\n    if (el.name === projectName) return el;\n  });\n  console.log(\"읽어온 현재 프로젝트 데이터\", projectData[0]);\n\n  const [comment, setComment] = useState(projectData[0].comment);\n  const [host, setHost] = useState(\"\");\n  const [party, setParty] = useState(projectData[0].party);\n  const [skill, setSkilled] = useState(projectData[0].skill);\n  const [term, setTerm] = useState(projectData[0].term);\n\n  const history = useHistory();\n\n  //하나의 기술 문자열을 담기 위한 샅애\n  const [eachSkill, setEachSkill] = useState(\"\");\n\n  //이미지를 업로드 하기 위한 상태들\n  let allInputs = { imgUrl: \"\" };\n  const [imageAsFile, setImageAsFile] = useState(\"\");\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      //console.log(user.displayName);\n      //console.log(user.email);\n      setHost(user.email);\n    } else {\n      console.log(\"유저 없는 뎁쇼\");\n    }\n  });\n\n  // let getFirestoreData = async () => {\n  //   let eachStore = []\n  //   let result = await firestore.collection(\"project\").get().then(function (querySnapshot) {               //result는 await를 하기 위해서 만들어낸 변수\n  //     querySnapshot.forEach(async function(doc) {\n  //       // doc.data() is never undefined for query doc snapshots\n  //       //console.log(doc.id, \" => \", doc.data())\n  //       console.log(\"요청하는 이미지는 다음과 같습니다 :\" + doc.data().image)\n  //       let image = await getFireBaseImage(doc.data().image)\n  //       let eachData = {\n  //         'comment' : doc.data().comment,\n  //         'finish' : doc.data().finish,\n  //         'host' : doc.data().host,\n  //         'image' : image,\n  //         'name' : doc.data().name,\n  //         'party' : doc.data().party,\n  //         'signed' : doc.data().signed,\n  //         'skill' : doc.data().skill,\n  //         'term' : doc.data().term\n  //       }\n  //       eachStore.push(eachData)\n  //     });\n  //   })\n  //   return eachStore\n  // }\n\n  let updateDatabase = async () => {\n    console.log(\n      \"수정되는 데이터:\",\n      \"개요:\",\n      comment,\n      \"인원:\",\n      party,\n      \"스킬:\",\n      skill,\n      \"기간\",\n      term\n    );\n    console.log(\"현재 데이터:\", projectData[0]);\n    firestore\n      .collection(\"project\")\n      .doc(projectData[0].name)\n      .update({\n        comment: comment,\n        party: party,\n        skill: skill,\n        term: term,\n      })\n      .then(function () {\n        alert(\"프로젝트 수정에 성공했습니다\");\n        console.log(localStorage.fireStoreData);\n        history.push(\"/mypage/myprojectlist\");\n      })\n      .catch(function (error) {\n        console.error(\"다음과 같은 에러가 발생했습니다 : \" + error);\n      });\n  };\n\n  let deleteProjectData = async () => {\n    firestore\n      .collection(\"project\")\n      .doc(projectName)\n      .delete()\n      .then(() => {\n        alert(\"프로젝트를 성공적으로 삭제했습니다\");\n        history.push(\"/mypage/myprojectlist\");\n      })\n      .catch((error) => {\n        console.error(\"다음과 같은 에러가 발생했습니다 : \" + error);\n      });\n  };\n\n  let skillbutton = () => {\n    if (skill.length > 2) {\n      alert(\"기술 스택은 3개까지만 넣을 수 있어용~\");\n    } else {\n      if (skill.includes(eachSkill.toLowerCase()) === false) {\n        setSkilled(skill.concat(eachSkill.toLowerCase()));\n      } else {\n        alert(\"중복된 기술이에용~\");\n      }\n    }\n  };\n\n  return (\n    <div className={styles.regist}>\n      <div className={styles.projectint}>\n        <span>\n          <p>프로젝트 이름 :{projectData[0].name}</p>\n\n          <div style={{ marginTop: \"10px\" }}>\n            <img src={projectData[0].image} style={{ width: \"40vh\" }} />\n          </div>\n        </span>\n\n        <span>\n          <p>\n            모집인원 :{projectData[0].party}\n            <input\n              type=\"number\"\n              value={party}\n              onChange={(e) => setParty(e.target.value)}\n            ></input>\n          </p>\n          <p>현재 등록 인원 :{projectData[0].signed}</p>\n          <p>\n            프로젝트 기간 :{projectData[0].term}\n            <input\n              type=\"date\"\n              value={term}\n              onChange={(e) => setTerm(e.target.value)}\n            ></input>\n          </p>\n\n          <div>\n            기술 스택 :\n            {projectData[0].skill.map((el, idx) => {\n              return (\n                <div>\n                  <div className={styles.skill}>{el}</div>\n                  <input\n                    type=\"text\"\n                    value={eachSkill}\n                    onChange={(e) => setEachSkill(e.target.value)}\n                  ></input>\n                  <button>변경</button>\n                </div>\n              );\n            })}\n            <input\n              type=\"text\"\n              value={eachSkill}\n              onChange={(e) => setEachSkill(e.target.value)}\n            ></input>\n            <button onClick={skillbutton}>추가</button>\n            <div className={styles.teckstack}>\n              <li>\n                기술스택1 : <div style={{ width: \"50%\" }}>{skill[0]}</div>\n              </li>\n              <li>\n                기술스택2 : <div style={{ width: \"50%\" }}>{skill[1]}</div>\n              </li>\n              <li>\n                기술스택3 : <div style={{ width: \"50%\" }}>{skill[2]}</div>\n              </li>\n            </div>\n          </div>\n        </span>\n      </div>\n\n      <p>\n        프로젝트 개요 :{projectData[0].comment}\n        <div style={{ paddingTop: \"20px\" }}>\n          <textarea\n            type=\"text\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            style={{ width: \"50vh\", height: \"15vh\" }}\n          ></textarea>\n        </div>\n      </p>\n      <div className={styles.registbtn}>\n        <span>\n          <button onClick={updateDatabase}>수정하기</button>\n        </span>\n        <span style={{ paddingLeft: \"20px\" }}>\n          <button onClick={deleteProjectData}>삭제하기</button>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default MyProjectListDetail;\n","/home/jihyun/codestates/project/forum_client/forum_project/src/index.js",[],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MainPage/MainPage.js",[],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["133","134","135","136","137","138","139","140"],"import React, { useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport styles from \"../../css/Project/ProjectDetail.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { firestore } from \"../../firebase\";\nimport auth from \"firebase/auth\";\n\nfunction ProjectDetail() {\n  let location = useLocation();\n  let photo = location.state.photo;\n  let name = location.state.name;\n  let period = location.state.period;\n  let person = location.state.person;\n  let lang = location.state.lang;\n  let applied = null;\n  let account = undefined;\n  //현재지원자 카운트\n  const [count, setCount] = useState(0);\n\n  let history = useHistory();\n\n  let dataFire = JSON.parse(localStorage.getItem(\"fireStoreData\")).filter(\n    (eachData) => {\n      if (eachData.name === name) return eachData;\n    }\n  );\n  console.log(\"파이어베이스 데이터(필터링):\", dataFire);\n  let term = dataFire[0].term;\n  let party = dataFire[0].party;\n  let comment = dataFire[0].comment;\n  let host = dataFire[0].host; //프로젝트 주인장 아이디\n  console.log(\"프로젝트의 이름은 다음과 같습니다 : \" + name);\n  console.log(\"프로젝트를 등록한 유저의 아이디는 다음과 같습니다 : \" + host);\n\n  function delay(ms) {\n    return new Promise((resolve, reject) => {\n      //promise 객체 반환, async도 promise를 다루는 기술이란 것을 잊지 말것\n      setTimeout(resolve, ms);\n    });\n  }\n\n  let checkLogInUser = () => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        console.log(\"머리 뜨겁네\" + user.email);\n        account = user.email;\n      } else {\n        console.log(\"위에서 반환이 되지 않으면 undefined가 나감\");\n      }\n    });\n  };\n\n  let readProjectData = (account) => {\n    firestore\n      .collection(\"users\")\n      .doc(account)\n      .get()\n      .then(async function (doc) {\n        if (doc.exists) {\n          applied = doc.data().appliedProject;\n          console.log(\"가져온 친구는 다음과 같습니다\" + applied);\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      });\n  };\n  //----------------------------------------------------------------------------------\n\n  let applyProject = async () => {\n    checkLogInUser(); //프로젝트 신청자 아이디\n    await delay(800);\n    readProjectData(account);\n    await delay(800);\n    console.log(\"account는 다음과 같음\" + account);\n    console.log(\"applied는 다음과 같음\" + applied);\n    if (account === undefined) {\n      alert(\"로그인을 하셔야 프로젝트에 지원 하실 수 있으세요\");\n    } else if (account === host) {\n      alert(\"자기 프로젝트에는 지원하실 수 없어요ㅠㅠ\");\n    } else if (applied.includes(name) === true) {\n      alert(\"이미 지원하신 프로젝트입니다\");\n    } else {\n      await firestore\n        .collection(\"users\")\n        .doc(host)\n        .update({\n          submittedProject: firebase.firestore.FieldValue.arrayUnion({\n            applicant: account,\n            project: name,\n          }),\n        });\n      await firestore\n        .collection(\"users\")\n        .doc(account)\n        .update({\n          appliedProject: firebase.firestore.FieldValue.arrayUnion(name),\n        });\n      await delay(1500);\n      alert(\"지원을 성공적으로 마치셨습니다.\");\n      window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.projectDetail}>\n        <div className={styles.header}>\n          <h2>프로젝트명: {name}</h2>\n        </div>\n        <div className={styles.projectEx}>\n          <img src={photo}></img>\n\n          <div className={styles.text}>\n            <div>예상기간: {term}</div>\n            <div style={{ marginTop: \"2vh\" }}>예상인원: {party}명</div>\n            <div style={{ marginTop: \"2vh\" }}>현재지원: {count}명</div>\n            <div style={{ marginTop: \"2vh\" }}>\n              사용언어:{\" \"}\n              {dataFire.map((eachData) => {\n                {\n                  return eachData.skill.map((skill) => {\n                    console.log(skill);\n                    return <span className={styles.skill}>{skill}</span>;\n                  });\n                }\n              })}\n            </div>\n          </div>\n        </div>\n        <div className={styles.explain}>\n          <h3>개요:{comment}</h3>\n        </div>\n        <div className={styles.btn}>\n          <span>\n            <button onClick={applyProject}>지원하기</button>\n          </span>\n          <span>\n            <button\n              style={{ marginLeft: \"6vh\" }}\n              onClick={() => history.goBack()}\n            >\n              취소하기\n            </button>\n          </span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectDetail;\n","/home/jihyun/codestates/project/forum_client/forum_project/src/firebase.js",[],"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/Profile.js",["141","142","143","144"],"import React from \"react\";\nimport styles from \"../../css/MyPage/Profile.module.css\";\nimport firebase from \"firebase/app\";\nimport auth from \"firebase/auth\";\nconst Profile = (props) => {\n  let user = firebase.auth().currentUser;\n  let name, email, photoUrl, uid, emailVerified;\n  console.log(\"유저 정보\", user);\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    photoUrl = user.photoURL;\n    emailVerified = user.emailVerified;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n  return (\n    <div className={styles.header}>\n      <div>\n        <img src={photoUrl} style={{ borderRadius: \"50px\" }}></img>\n      </div>\n      <div style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\n        {name} 님, 환영합니다.\n      </div>\n      <div>이메일: {email}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js",[],{"ruleId":"145","severity":1,"message":"146","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":7,"column":35,"nodeType":"147","messageId":"148","endLine":7,"endColumn":40},{"ruleId":"145","severity":1,"message":"150","line":7,"column":42,"nodeType":"147","messageId":"148","endLine":7,"endColumn":48},{"ruleId":"151","severity":1,"message":"152","line":43,"column":12,"nodeType":"153","endLine":50,"endColumn":3},{"ruleId":"151","severity":1,"message":"154","line":50,"column":4,"nodeType":"155","endLine":50,"endColumn":6,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"157","line":56,"column":7,"nodeType":"147","messageId":"148","endLine":56,"endColumn":13},{"ruleId":"145","severity":1,"message":"158","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":20},{"ruleId":"145","severity":1,"message":"159","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"160","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":16},{"ruleId":"145","severity":1,"message":"161","line":14,"column":8,"nodeType":"147","messageId":"148","endLine":14,"endColumn":12},{"ruleId":"145","severity":1,"message":"162","line":18,"column":12,"nodeType":"147","messageId":"148","endLine":18,"endColumn":17},{"ruleId":"145","severity":1,"message":"163","line":24,"column":7,"nodeType":"147","messageId":"148","endLine":24,"endColumn":15},{"ruleId":"145","severity":1,"message":"164","line":46,"column":21,"nodeType":"147","messageId":"148","endLine":46,"endColumn":30},{"ruleId":"145","severity":1,"message":"165","line":47,"column":21,"nodeType":"147","messageId":"148","endLine":47,"endColumn":33},{"ruleId":"145","severity":1,"message":"166","line":48,"column":21,"nodeType":"147","messageId":"148","endLine":48,"endColumn":26},{"ruleId":"145","severity":1,"message":"167","line":49,"column":21,"nodeType":"147","messageId":"148","endLine":49,"endColumn":31},{"ruleId":"168","severity":1,"message":"169","line":165,"column":13,"nodeType":"170","endLine":169,"endColumn":14},{"ruleId":"168","severity":1,"message":"169","line":172,"column":15,"nodeType":"170","endLine":176,"endColumn":16},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"145","severity":1,"message":"175","line":2,"column":20,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"176","line":2,"column":28,"nodeType":"147","messageId":"148","endLine":2,"endColumn":39},{"ruleId":"145","severity":1,"message":"177","line":11,"column":18,"nodeType":"147","messageId":"148","endLine":11,"endColumn":27},{"ruleId":"168","severity":1,"message":"169","line":190,"column":15,"nodeType":"170","endLine":190,"endColumn":64},{"ruleId":"145","severity":1,"message":"178","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":20},{"ruleId":"145","severity":1,"message":"179","line":2,"column":22,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"180","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":16},{"ruleId":"145","severity":1,"message":"181","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":19},{"ruleId":"145","severity":1,"message":"182","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":17},{"ruleId":"145","severity":1,"message":"183","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":19},{"ruleId":"145","severity":1,"message":"184","line":19,"column":18,"nodeType":"147","messageId":"148","endLine":19,"endColumn":29},{"ruleId":"168","severity":1,"message":"169","line":84,"column":19,"nodeType":"170","endLine":92,"endColumn":20},{"ruleId":null,"fatal":true,"severity":2,"message":"185","line":35,"column":2},{"ruleId":"145","severity":1,"message":"186","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"145","severity":1,"message":"187","line":8,"column":9,"nodeType":"147","messageId":"148","endLine":8,"endColumn":17},{"ruleId":"145","severity":1,"message":"188","line":27,"column":5,"nodeType":"147","messageId":"148","endLine":27,"endColumn":9},{"ruleId":"145","severity":1,"message":"166","line":28,"column":5,"nodeType":"147","messageId":"148","endLine":28,"endColumn":10},{"ruleId":"145","severity":1,"message":"189","line":29,"column":5,"nodeType":"147","messageId":"148","endLine":29,"endColumn":13},{"ruleId":"145","severity":1,"message":"190","line":30,"column":5,"nodeType":"147","messageId":"148","endLine":30,"endColumn":18},{"ruleId":"145","severity":1,"message":"191","line":31,"column":5,"nodeType":"147","messageId":"148","endLine":31,"endColumn":8},{"ruleId":"145","severity":1,"message":"192","line":35,"column":9,"nodeType":"147","messageId":"148","endLine":35,"endColumn":17},{"ruleId":"145","severity":1,"message":"193","line":46,"column":9,"nodeType":"147","messageId":"148","endLine":46,"endColumn":22},{"ruleId":"145","severity":1,"message":"194","line":49,"column":9,"nodeType":"147","messageId":"148","endLine":49,"endColumn":17},{"ruleId":"145","severity":1,"message":"195","line":57,"column":9,"nodeType":"147","messageId":"148","endLine":57,"endColumn":21},{"ruleId":"145","severity":1,"message":"161","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":12},{"ruleId":"145","severity":1,"message":"188","line":22,"column":5,"nodeType":"147","messageId":"148","endLine":22,"endColumn":9},{"ruleId":"145","severity":1,"message":"189","line":24,"column":5,"nodeType":"147","messageId":"148","endLine":24,"endColumn":13},{"ruleId":"145","severity":1,"message":"190","line":25,"column":5,"nodeType":"147","messageId":"148","endLine":25,"endColumn":18},{"ruleId":"145","severity":1,"message":"191","line":26,"column":5,"nodeType":"147","messageId":"148","endLine":26,"endColumn":8},{"ruleId":"196","severity":1,"message":"197","line":32,"column":48,"nodeType":"153","messageId":"198","endLine":32,"endColumn":50},{"ruleId":"196","severity":1,"message":"197","line":38,"column":46,"nodeType":"153","messageId":"198","endLine":38,"endColumn":48},{"ruleId":"168","severity":1,"message":"169","line":107,"column":19,"nodeType":"170","endLine":115,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":141,"column":19,"nodeType":"170","endLine":148,"endColumn":20},{"ruleId":"145","severity":1,"message":"175","line":2,"column":20,"nodeType":"147","messageId":"148","endLine":2,"endColumn":26},{"ruleId":"145","severity":1,"message":"176","line":2,"column":28,"nodeType":"147","messageId":"148","endLine":2,"endColumn":39},{"ruleId":"145","severity":1,"message":"182","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":17},{"ruleId":"196","severity":1,"message":"197","line":15,"column":42,"nodeType":"153","messageId":"198","endLine":15,"endColumn":44},{"ruleId":"145","severity":1,"message":"199","line":21,"column":10,"nodeType":"147","messageId":"148","endLine":21,"endColumn":14},{"ruleId":"145","severity":1,"message":"200","line":33,"column":10,"nodeType":"147","messageId":"148","endLine":33,"endColumn":21},{"ruleId":"145","severity":1,"message":"201","line":33,"column":23,"nodeType":"147","messageId":"148","endLine":33,"endColumn":37},{"ruleId":"145","severity":1,"message":"202","line":34,"column":10,"nodeType":"147","messageId":"148","endLine":34,"endColumn":20},{"ruleId":"145","severity":1,"message":"203","line":34,"column":22,"nodeType":"147","messageId":"148","endLine":34,"endColumn":35},{"ruleId":"168","severity":1,"message":"169","line":136,"column":13,"nodeType":"170","endLine":136,"endColumn":73},{"ruleId":"145","severity":1,"message":"161","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":12},{"ruleId":"145","severity":1,"message":"204","line":13,"column":7,"nodeType":"147","messageId":"148","endLine":13,"endColumn":13},{"ruleId":"145","severity":1,"message":"205","line":14,"column":7,"nodeType":"147","messageId":"148","endLine":14,"endColumn":13},{"ruleId":"145","severity":1,"message":"206","line":15,"column":7,"nodeType":"147","messageId":"148","endLine":15,"endColumn":11},{"ruleId":"145","severity":1,"message":"207","line":19,"column":17,"nodeType":"147","messageId":"148","endLine":19,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":24,"column":16,"nodeType":"153","messageId":"198","endLine":24,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":112,"column":11,"nodeType":"170","endLine":112,"endColumn":28},{"ruleId":"208","severity":1,"message":"209","line":121,"column":17,"nodeType":"210","messageId":"211","endLine":126,"endColumn":18},{"ruleId":"145","severity":1,"message":"161","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":12},{"ruleId":"145","severity":1,"message":"190","line":13,"column":5,"nodeType":"147","messageId":"148","endLine":13,"endColumn":18},{"ruleId":"145","severity":1,"message":"191","line":14,"column":5,"nodeType":"147","messageId":"148","endLine":14,"endColumn":8},{"ruleId":"168","severity":1,"message":"169","line":21,"column":9,"nodeType":"170","endLine":21,"endColumn":62},"no-unused-vars","'Mypage' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getFirestoreData'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'result' is assigned a value but never used.","'useContext' is defined but never used.","'login' is defined but never used.","'selected' is defined but never used.","'auth' is defined but never used.","'delay' is defined but never used.","'provider' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["213"],"no-negated-in-lhs",["214"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'setFinish' is assigned a value but never used.","'withRouter' is defined but never used.","'Link' is defined but never used.","'firebase' is defined but never used.","'firestore' is defined but never used.","'storage' is defined but never used.","'useEffect' is defined but never used.","'setDataFire' is assigned a value but never used.","Parsing error: Unexpected token\n\n  33 |               }}\n  34 |             >\n> 35 | <<<<<<< HEAD\n     |  ^\n  36 |              진행 중인 프로젝트 \n  37 | =======\n  38 |               나의 프로젝트","'Slider' is defined but never used.","'settings' is assigned a value but never used.","'name' is assigned a value but never used.","'photoUrl' is assigned a value but never used.","'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used.","'dataFire' is assigned a value but never used.","'handleApprove' is assigned a value but never used.","'userData' is assigned a value but never used.","'handleReject' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'host' is assigned a value but never used.","'imageAsFile' is assigned a value but never used.","'setImageAsFile' is assigned a value but never used.","'imageAsUrl' is assigned a value but never used.","'setImageAsUrl' is assigned a value but never used.","'period' is assigned a value but never used.","'person' is assigned a value but never used.","'lang' is assigned a value but never used.","'setCount' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"desc":"215","fix":"216"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getFirestoreData]",{"range":"217","text":"218"},[1224,1226],"[getFirestoreData]"]