[{"/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"1"},{"size":6963,"mtime":1611710150031,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1b813wj","/home/jihyun/codestates/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",["6","7","8","9","10","11","12","13"],{"ruleId":"14","severity":1,"message":"15","line":3,"column":8,"nodeType":"16","messageId":"17","endLine":3,"endColumn":14},{"ruleId":"14","severity":1,"message":"18","line":6,"column":8,"nodeType":"16","messageId":"17","endLine":6,"endColumn":12},{"ruleId":"14","severity":1,"message":"19","line":15,"column":9,"nodeType":"16","messageId":"17","endLine":15,"endColumn":17},{"ruleId":"20","severity":1,"message":"21","line":27,"column":12,"nodeType":"22","endLine":43,"endColumn":3},{"ruleId":"14","severity":1,"message":"23","line":31,"column":6,"nodeType":"16","messageId":"17","endLine":31,"endColumn":10},{"ruleId":"14","severity":1,"message":"24","line":33,"column":6,"nodeType":"16","messageId":"17","endLine":33,"endColumn":14},{"ruleId":"14","severity":1,"message":"25","line":34,"column":6,"nodeType":"16","messageId":"17","endLine":34,"endColumn":19},{"ruleId":"14","severity":1,"message":"26","line":35,"column":6,"nodeType":"16","messageId":"17","endLine":35,"endColumn":9},"no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar","'auth' is defined but never used.","'settings' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'name' is assigned a value but never used.","'photoUrl' is assigned a value but never used.","'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used."]