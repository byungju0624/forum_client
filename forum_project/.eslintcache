[{"/home/nell/project/forum_client/forum_project/src/component/Guide/Guide.js":"1","/home/nell/project/forum_client/forum_project/src/index.js":"2","/home/nell/project/forum_client/forum_project/src/component/Project/Project.js":"3","/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"4","/home/nell/project/forum_client/forum_project/src/component/MainPage/MainPage.js":"5","/home/nell/project/forum_client/forum_project/src/component/App.js":"6","/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js":"7","/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js":"8","/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"9"},{"size":944,"mtime":1612087868071,"results":"10","hashOfConfig":"11"},{"size":207,"mtime":1611063682030,"results":"12","hashOfConfig":"11"},{"size":3195,"mtime":1611755502628,"results":"13","hashOfConfig":"11"},{"size":8132,"mtime":1611755502628,"results":"14","hashOfConfig":"11"},{"size":232,"mtime":1611645554911,"results":"15","hashOfConfig":"11"},{"size":2360,"mtime":1611214682191,"results":"16","hashOfConfig":"11"},{"size":4673,"mtime":1611816452228,"results":"17","hashOfConfig":"11"},{"size":10911,"mtime":1611755502628,"results":"18","hashOfConfig":"11"},{"size":4843,"mtime":1611757902658,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"158mqmo",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nell/project/forum_client/forum_project/src/component/Guide/Guide.js",[],"/home/nell/project/forum_client/forum_project/src/index.js",[],["42","43"],"/home/nell/project/forum_client/forum_project/src/component/Project/Project.js",["44","45","46","47","48","49","50","51"],"import styles from \"../../css/Project/Project.module.css\";\nimport { withRouter, Link, useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport firebase from \"firebase/app\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nlet photo = null;\nlet name = null;\nlet period = null;\nlet person = null;\nlet lang = null;\n\nfunction Project(props) {\n  let json = localStorage.getItem(\"fireStoreData\");\n  let localData = JSON.parse(json) || [];\n  let [dataFire, setDataFire] = useState(localData);\n\n  /*function delay(ms){\n\t\treturn new Promise((resolve, reject) =>{\n\t\t\tsetTimeout(resolve, ms)\n\t\t})\n\t}*/\n\n  /*useEffect(async ()=> {\n\t\tawait delay(2000)\n\t\tconsole.log(\"루삥뽕\"+JSON.stringify(dataFire))\n\t},[])*/\n\n  let history = useHistory();\n\n  let handleClick = (e) => {\n    console.log(\"e.target:\", e.target);\n    photo = e.target.src;\n    name = e.target.name;\n    period = e.target.period;\n    person = e.target.person;\n    lang = e.target.lang;\n    console.log(\n      \"이미지:\",\n      photo,\n      \"이름:\",\n      name,\n      \"기간:\",\n      period,\n      \"인원:\",\n      person,\n      \"스킬\",\n      lang\n    );\n    history.push({\n      pathname: \"/projectdetail\",\n      state: {\n        photo: photo,\n        name: name,\n        period: period,\n        person: person,\n        lang: lang,\n      },\n    });\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    arrow: true,\n    className: \"slides\",\n  };\n\n  return (\n    <div className={styles.project}>\n      <h2>프로젝트 열람</h2>\n      <Slider {...settings}>\n        {dataFire.map((eachData) => {\n          console.log(\"개별 프로젝트 데이터:\", eachData);\n          return (\n            <div className={styles.cardwraper}>\n              <div className={styles.card}>\n                <div className={styles.card_img}>\n                  <img\n                    src={eachData.image}\n                    name={eachData.name}\n                    period={eachData.term}\n                    person={eachData.party}\n                    lang={eachData.skill}\n                    className={styles.photo}\n                    onClick={handleClick}\n                  ></img>\n                </div>\n              </div>\n              <ul>\n                <li>프로젝트: {eachData.name}</li>\n                <li style={{ marginTop: \"4px\" }}>예상기간: {eachData.term}</li>\n                <li style={{ marginTop: \"4px\" }}>\n\n                  예상인원: {eachData.party}명\n\n                </li>\n                <li>\n                  <div className={styles.tag}>\n                    <div>사용언어: </div>\n                    {eachData.skill.map((skill) => {\n                      return (\n                        <>\n                          <div className={styles.skill}>{skill}</div>\n                        </>\n                      );\n                    })}\n                  </div>\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n      </Slider>\n    </div>\n  );\n}\n\nexport default Project;\n",["52","53"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",["54","55","56","57","58","59"],"/home/nell/project/forum_client/forum_project/src/component/MainPage/MainPage.js",[],"/home/nell/project/forum_client/forum_project/src/component/App.js",["60","61","62","63","64","65"],"/home/nell/project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js",["66","67","68","69","70","71","72","73"],"/home/nell/project/forum_client/forum_project/src/component/Regist/Regist.js",["74","75","76","77","78"],"import styles from \"../../css/Regist/Regist.module.css\";\nimport { useState, useRef, useCallback } from \"react\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Regist() {\n  const [comment, setComment] = useState(\"\");\n  const [finish, setFinish] = useState(false);\n  const [host, setHost] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [party, setParty] = useState(0);\n  const [signed, setSigned] = useState(1);\n  const [skill, setSkilled] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const history = useHistory();\n\n  //하나의 기술 문자열을 담기 위한 샅애\n  const [eachSkill, setEachSkill] = useState(\"\");\n\n  //이미지를 업로드 하기 위한 상태들\n  let allInputs = { imgUrl: \"\" };\n  const [imageAsFile, setImageAsFile] = useState(\"\");\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      //console.log(user.displayName);\n      //console.log(user.email);\n      setHost(user.email);\n    } else {\n      console.log(\"유저 없는 뎁쇼\");\n    }\n  });\n\n  function delay(ms) {\n    return new Promise((resolve, reject) => {\n      //promise 객체 반환, async도 promise를 다루는 기술이란 것을 잊지 말것\n      setTimeout(resolve, ms);\n    });\n  }\n\n  let createDatabase = async () => {\n    let result = await handleFireBaseUpload(); //여기서 일단 이미지를 올린다.\n    await delay(2500);\n    if (result === false) {\n      //2차 안전장치\n      console.log(\"이미지를 올리지 않아서 아무 일도 안생길 거임\");\n    } else if (!comment || finish || !name || !party || !eachSkill) {\n      alert(\"모든 항목은 필수입니다\");\n      window.location.reload();\n    } else {\n      await howManyRegist(host);\n      await firestore\n        .collection(\"project\")\n        .doc(name)\n        .get()\n        .then(function (docName) {\n          if (docName.data() !== undefined) {\n            alert(\"중복된 프로젝트명입니다. 다른 프로젝트 이름을 정해주세요\");\n            window.location.reload();\n          } else if (name + \".png\" !== imageAsFile.name) {\n            alert(\"프로젝트 이름과 이미지 파일은 이름이 같아야 합니다.\");\n            window.location.reload();\n          } else {\n            firestore\n              .collection(\"project\")\n              .doc(name)\n              .set({\n                host: host,\n                comment: comment,\n                finish: finish,\n                name: name,\n                party: party,\n                signed: signed,\n                skill: skill,\n                term: term,\n                image: imageAsFile.name,\n                people: [host],\n              })\n              .then(async function () {\n                await addAppliedProject(host, name);\n                alert(\"프로젝트 등록에 성공했습니다\");\n                window.location.reload();\n              })\n              .catch(function (error) {\n                console.error(\"다음과 같은 에러가 발생했습니다 : \" + error);\n              });\n          }\n        });\n    }\n  };\n\n  let skillbutton = () => {\n    if (skill.length > 2) {\n      alert(\"기술 스택은 3개까지만 넣을 수 있어용~\");\n    } else {\n      if (skill.includes(eachSkill.toLowerCase()) === false) {\n        setSkilled(skill.concat(eachSkill.toLowerCase()));\n      } else {\n        alert(\"중복된 기술이에용~\");\n      }\n    }\n  };\n\n  let handleImageAsFile = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    const image = e.target.files[0];\n    reader.onloadend = () => {\n      setImageAsFile(image);\n      setImageAsUrl(reader.result);\n    };\n    reader.readAsDataURL(image);\n  };\n\n  let handleFireBaseUpload = (e) => {\n    if (imageAsFile === \"\") {\n      alert(`이미지 파일을 올려 주세요!!!`);\n      return false;\n    } else {\n      console.log(\"이미지 업로드를 시작합니다\");\n      console.log(\"사진이름이 뭔지 확인해볼거야\" + imageAsFile.name);\n      const uploadTask = storage\n        .ref(`/project/${imageAsFile.name}`)\n        .put(imageAsFile);\n      uploadTask.on(\n        \"state_changed\",\n        (snapShot) => {\n          console.log(snapShot);\n        },\n        (err) => {\n          console.log(err);\n        },\n        () => {\n          storage\n            .ref(\"project\")\n            .child(imageAsFile.name)\n            .getDownloadURL()\n            .then((fireBaseUrl) => {\n              setImageAsUrl((prevObject) => ({\n                ...prevObject,\n                imgUrl: fireBaseUrl,\n              }));\n              console.log(\"유알엘이 뭔지 확인해볼거야\" + fireBaseUrl);\n              console.log(\"사진이름이 뭔지 확인해볼거야\" + imageAsFile.name);\n              firestore\n                .collection(\"project\")\n                .doc(imageAsFile.name)\n                .update({\n                  image: fireBaseUrl,\n                })\n                .then(function () {\n                  console.log(\n                    \"파이어베이스 업데이트 완료 이미지 url 파이어스토어에 업로드\"\n                  );\n                })\n                .catch(function (err) {\n                  //alert(err)\n                });\n            });\n        }\n      );\n      return true;\n    }\n  };\n\n  let howManyRegist = async (host) => {\n    console.log(\"-------------------------------------\");\n    await firestore\n      .collection(\"users\")\n      .doc(host)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          console.log(\"Document data:\", doc.data());\n          let document = doc.data();\n          if (document.hostProject.length > 2) {\n            alert(\n              \"프로젝트를 3개 이상 등록하실려면 프라이빗 계정으로 전환하세요\"\n            );\n            window.location.reload();\n          } else {\n            console.log(\"참\");\n          }\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"에러는 다음과 같음\" + error);\n      });\n    console.log(\"-------------------------------------\");\n  };\n\n  let addAppliedProject = async (host, name) => {\n    console.log(\"여기에 들어와 지는지 알고 싶어요!\" + host + \" / \" + name);\n    firestore\n      .collection(\"users\")\n      .doc(host)\n      .update({\n        hostProject: firebase.firestore.FieldValue.arrayUnion(name), //파이어스토어 배열 건드릴 때에는 절대 세미콜론 넣지마!!!\n      })\n      .then(function () {\n        console.log(\"유저 정보에도 자기가 등록한 프로젝트가 들어갔나요?\");\n      })\n      .catch(function (err) {\n        console.log(\"발생한 에러는 다음과 같습니다\" + err);\n      });\n  };\n\n  return (\n    <div className={styles.regist}>\n      <div className={styles.projectint}>\n        <span>\n          <p>\n            프로젝트 이름 :{\" \"}\n            <input\n              style={{ border: \"3px solid black\", fontWeight: \"bold\" }}\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></input>\n          </p>\n          <div>\n            <form onSubmit={handleFireBaseUpload}>\n              <input\n                type=\"file\"\n                accept=\"image/png\"\n                onChange={handleImageAsFile}\n                style={{ fontWeight: \"bold\" }}\n              />\n            </form>\n          </div>\n          <div style={{ marginTop: \"10px\" }}>\n            {imageAsFile !== \"\" ? (\n              <img src={imageAsUrl} style={{ width: \"40vh\" }} />\n            ) : (\n              <span>\n                png 파일을 선택해주세요. <br />\n                파일의 이름은 프로젝트의 이름과 동일해야 합니다.\n              </span>\n            )}\n          </div>\n        </span>\n        <span>\n          <p>\n            모집 인원 :{\" \"}\n            <input\n              style={{ border: \"3px solid black\", fontWeight: \"bold\" }}\n              type=\"number\"\n              value={party}\n              onChange={(e) => setParty(e.target.value)}\n            ></input>{\" \"}명\n          </p>\n          {/* <p>\n            등록 인원 :{\" \"}\n            <input\n              style={{ border: \"3px solid black\", fontWeight: \"bold\" }}\n              type=\"number\"\n              value={signed}\n              onChange={(e) => setSigned(e.target.value)}\n            ></input>{\" \"}\n            명\n          </p> */}\n          <p>\n            예상 기간 :{\" \"}\n            <input\n              style={{ border: \"3px solid black\", fontWeight: \"bold\" }}\n              type=\"date\"\n              value={term}\n              onChange={(e) => setTerm(e.target.value)}\n            ></input>\n          </p>\n\n          <div>\n            사용 언어 :{\" \"}\n            <input\n              style={{ border: \"3px solid black\" }}\n              type=\"text\"\n              value={eachSkill}\n              onChange={(e) => setEachSkill(e.target.value)}\n            ></input>\n            <button\n              style={{\n                marginLeft: \"5px\",\n                border: \"3px solid black\",\n                fontWeight: \"bold\",\n              }}\n              onClick={skillbutton}\n            >\n              클릭\n            </button>\n            <div className={styles.teckstack}>\n              <li>\n                사용 언어① : <div style={{ width: \"50%\" }}>{skill[0]}</div>\n              </li>\n              <li>\n                사용 언어② : <div style={{ width: \"50%\" }}>{skill[1]}</div>\n              </li>\n              <li>\n                사용 언어③ : <div style={{ width: \"50%\" }}>{skill[2]}</div>\n              </li>\n            </div>\n          </div>\n        </span>\n      </div>\n      \n      <div style={{ marginLeft: \"12vh\", marginTop: \"10vh\" }}>\n        <p>\n          프로젝트 개요 :{\" \"}\n          <div style={{ paddingTop: \"20px\" }}>\n            <textarea\n              type=\"text\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              style={{\n                width: \"50vh\",\n                height: \"15vh\",\n                border: \"3px solid black\",\n                fontWeight: \"bold\",\n              }}\n            ></textarea>\n          </div>\n        </p>\n      </div>\n      <div className={styles.registbtn}>\n        <span>\n          <button onClick={createDatabase}>등록하기</button>\n        </span>\n        <span style={{ paddingLeft: \"6vh\" }}>\n          <button onClick={() => history.push(\"/\")}>취소하기</button>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Regist;\n","/home/nell/project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["79","80","81","82","83","84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":26},{"ruleId":"91","severity":1,"message":"96","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":16},{"ruleId":"91","severity":1,"message":"97","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":19},{"ruleId":"91","severity":1,"message":"98","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":17},{"ruleId":"91","severity":1,"message":"99","line":8,"column":10,"nodeType":"93","messageId":"94","endLine":8,"endColumn":19},{"ruleId":"91","severity":1,"message":"100","line":19,"column":18,"nodeType":"93","messageId":"94","endLine":19,"endColumn":29},{"ruleId":"101","severity":1,"message":"102","line":84,"column":19,"nodeType":"103","endLine":92,"endColumn":20},{"ruleId":"87","replacedBy":"104"},{"ruleId":"89","replacedBy":"105"},{"ruleId":"91","severity":1,"message":"106","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":12},{"ruleId":"107","severity":1,"message":"108","line":18,"column":13,"nodeType":"109","endLine":34,"endColumn":4},{"ruleId":"91","severity":1,"message":"110","line":22,"column":7,"nodeType":"93","messageId":"94","endLine":22,"endColumn":11},{"ruleId":"91","severity":1,"message":"111","line":24,"column":7,"nodeType":"93","messageId":"94","endLine":24,"endColumn":15},{"ruleId":"91","severity":1,"message":"112","line":25,"column":7,"nodeType":"93","messageId":"94","endLine":25,"endColumn":20},{"ruleId":"91","severity":1,"message":"113","line":26,"column":7,"nodeType":"93","messageId":"94","endLine":26,"endColumn":10},{"ruleId":"91","severity":1,"message":"114","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":14},{"ruleId":"91","severity":1,"message":"115","line":7,"column":35,"nodeType":"93","messageId":"94","endLine":7,"endColumn":40},{"ruleId":"91","severity":1,"message":"116","line":7,"column":42,"nodeType":"93","messageId":"94","endLine":7,"endColumn":48},{"ruleId":"107","severity":1,"message":"108","line":43,"column":12,"nodeType":"109","endLine":50,"endColumn":3},{"ruleId":"107","severity":1,"message":"117","line":50,"column":4,"nodeType":"118","endLine":50,"endColumn":6,"suggestions":"119"},{"ruleId":"91","severity":1,"message":"120","line":56,"column":7,"nodeType":"93","messageId":"94","endLine":56,"endColumn":13},{"ruleId":"91","severity":1,"message":"106","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":12},{"ruleId":"91","severity":1,"message":"121","line":11,"column":5,"nodeType":"93","messageId":"94","endLine":11,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":22,"column":13,"nodeType":"109","endLine":38,"endColumn":4},{"ruleId":"91","severity":1,"message":"110","line":25,"column":7,"nodeType":"93","messageId":"94","endLine":25,"endColumn":11},{"ruleId":"91","severity":1,"message":"111","line":27,"column":7,"nodeType":"93","messageId":"94","endLine":27,"endColumn":15},{"ruleId":"91","severity":1,"message":"112","line":28,"column":7,"nodeType":"93","messageId":"94","endLine":28,"endColumn":20},{"ruleId":"91","severity":1,"message":"113","line":29,"column":7,"nodeType":"93","messageId":"94","endLine":29,"endColumn":10},{"ruleId":"107","severity":1,"message":"122","line":38,"column":6,"nodeType":"118","endLine":38,"endColumn":8,"suggestions":"123"},{"ruleId":"91","severity":1,"message":"124","line":2,"column":20,"nodeType":"93","messageId":"94","endLine":2,"endColumn":26},{"ruleId":"91","severity":1,"message":"125","line":2,"column":28,"nodeType":"93","messageId":"94","endLine":2,"endColumn":39},{"ruleId":"91","severity":1,"message":"126","line":11,"column":18,"nodeType":"93","messageId":"94","endLine":11,"endColumn":27},{"ruleId":"91","severity":1,"message":"127","line":15,"column":18,"nodeType":"93","messageId":"94","endLine":15,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":239,"column":15,"nodeType":"103","endLine":239,"endColumn":65},{"ruleId":"91","severity":1,"message":"128","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"106","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":12},{"ruleId":"91","severity":1,"message":"129","line":13,"column":7,"nodeType":"93","messageId":"94","endLine":13,"endColumn":13},{"ruleId":"91","severity":1,"message":"130","line":14,"column":7,"nodeType":"93","messageId":"94","endLine":14,"endColumn":13},{"ruleId":"91","severity":1,"message":"131","line":15,"column":7,"nodeType":"93","messageId":"94","endLine":15,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":22,"column":16,"nodeType":"109","messageId":"134","endLine":22,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":111,"column":11,"nodeType":"103","endLine":111,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":120,"column":17,"nodeType":"137","messageId":"138","endLine":125,"endColumn":18},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'firebase' is defined but never used.","'firestore' is defined but never used.","'storage' is defined but never used.","'useEffect' is defined but never used.","'setDataFire' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["139"],["140"],"'auth' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'name' is assigned a value but never used.","'photoUrl' is assigned a value but never used.","'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used.","'Mypage' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","React Hook useEffect has a missing dependency: 'getFirestoreData'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'result' is assigned a value but never used.","'appliedData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appliedData' and 'getMyAppliedProject'. Either include them or remove the dependency array.",["142"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'setFinish' is assigned a value but never used.","'setSigned' is assigned a value but never used.","'useState' is defined but never used.","'period' is assigned a value but never used.","'person' is assigned a value but never used.","'lang' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [getFirestoreData]",{"range":"147","text":"148"},"Update the dependencies array to be: [appliedData, getMyAppliedProject]",{"range":"149","text":"150"},[1224,1226],"[getFirestoreData]",[1111,1113],"[appliedData, getMyAppliedProject]"]