[{"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/App.js":"1","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js":"2","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Regist/Regist.js":"3","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/ProjectDetail.js":"4","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Guide/Guide.js":"5","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/index.js":"6","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/MyProjectList.js":"7","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/Profile.js":"8","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/FirstBlock.js":"9","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"10","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Menu.js":"11","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/Project.js":"12"},{"size":2610,"mtime":1611760610424,"results":"13","hashOfConfig":"14"},{"size":4914,"mtime":1611817530536,"results":"15","hashOfConfig":"14"},{"size":10918,"mtime":1611800044603,"results":"16","hashOfConfig":"14"},{"size":4843,"mtime":1611800042140,"results":"17","hashOfConfig":"14"},{"size":1503,"mtime":1612862660858,"results":"18","hashOfConfig":"14"},{"size":207,"mtime":1610419429641,"results":"19","hashOfConfig":"14"},{"size":9289,"mtime":1611818074164,"results":"20","hashOfConfig":"14"},{"size":993,"mtime":1611537714905,"results":"21","hashOfConfig":"14"},{"size":1816,"mtime":1612876130689,"results":"22","hashOfConfig":"14"},{"size":8133,"mtime":1611800034524,"results":"23","hashOfConfig":"14"},{"size":6075,"mtime":1612876806615,"results":"24","hashOfConfig":"14"},{"size":3223,"mtime":1612877132788,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"26wkim",{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/App.js",["54","55","56","57","58","59"],"import \"../css/App.css\";\nimport React, { useState } from \"react\";\nimport Menu from \"../component/Menu\";\nimport Mypage from \"../component/MyPage/MyPage\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { firestore } from \"../firebase\";\nimport { storage } from \"../firebase\";\nimport { useEffect } from \"react\";\n\nlet dataFire = null;\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n  });\n\n  function delay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  let getFireBaseImage = (image) => {\n    return storage\n      .ref(\"project\")\n      .child(image)\n      .getDownloadURL()\n      .then((url) => {\n        return url;\n      })\n      .catch((error) => {\n        console.log(\"이미지를 받아오지 못했습니다.\" + error);\n      });\n  };\n\n  useEffect(async () => {\n    let result = await getFirestoreData();\n    await delay(1000);\n    let resultString = JSON.stringify(result); //로컬스토리지에는 문자열만 넣을 수 있음\n    localStorage.setItem(\"fireStoreData\", resultString);\n    dataFire = localStorage.getItem(\"fireStoreData\");\n    console.log(dataFire);\n  }, []);\n\n  let getFirestoreData = async () => {\n    let eachStore = [];\n    let result = await firestore\n      .collection(\"project\")\n      .get()\n      .then(function (querySnapshot) {\n        //result는 await를 하기 위해서 만들어낸 변수\n        querySnapshot.forEach(async function (doc) {\n          // doc.data() is never undefined for query doc snapshots\n          //console.log(doc.id, \" => \", doc.data())\n          console.log(\"요청하는 이미지는 다음과 같습니다 :\" + doc.data().image);\n          let image = await getFireBaseImage(doc.data().image);\n          let eachData = {\n            comment: doc.data().comment,\n            finish: doc.data().finish,\n            host: doc.data().host,\n            image: image,\n            name: doc.data().name,\n            party: doc.data().party,\n            people: doc.data().people,\n            signed: doc.data().signed,\n            skill: doc.data().skill,\n            term: doc.data().term,\n          };\n          eachStore.push(eachData);\n        });\n      });\n    return eachStore;\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Menu login={login} setLogin={setLogin}></Menu>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["60","61"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js",["62","63","64","65","66","67","68","69"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Regist/Regist.js",["70","71","72","73","74"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/ProjectDetail.js",["75","76","77","78","79","80","81","82"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Guide/Guide.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/index.js",[],["83","84"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/MyProjectList.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React from \"react\";\nimport styles from \"../../css/MyPage/MyProjectList.module.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { storage } from \"../../firebase\";\nimport auth from \"firebase/auth\";\nimport { firestore } from \"../../firebase\";\n\nconst MyProjectList = (props) => {\n  const history = useHistory();\n\n  let user = firebase.auth().currentUser;\n  let name, email, photoUrl, uid, emailVerified;\n  console.log(\"유저 정보\", user);\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    photoUrl = user.photoURL;\n    emailVerified = user.emailVerified;\n    uid = user.uid; // The user's ID, unique to the Firebase project. Do NOT use\n    // this value to authenticate with your backend server, if\n    // you have one. Use User.getToken() instead.\n  }\n\n  //--------------------------------------------------------\n\n  let hostProjectData,\n    joinedProjectData,\n    myRegistedProjectData,\n    myJoinedProjectData;\n\n  // const [myRegisted, setMyRegisted] = useState([]);\n  // const [myJoined, setMyJoined] = useState([]);\n  let myRegisted = [];\n  let myJoined = [];\n  const [myRegistedProject, setMyRegistedProject] = useState([]);\n  const [myJoinedProject, setMyJoinedProject] = useState([]);\n\n  useEffect(async () => {\n    let user = firebase.auth().currentUser;\n    await delay(100);\n    if (user != null) {\n      name = user.displayName;\n      email = user.email;\n      photoUrl = user.photoURL;\n      emailVerified = user.emailVerified;\n      uid = user.uid;\n    }\n\n    await getMyHostData(email);\n    await getMyJoinedData(email);\n    await delay(1000);\n    //console.log(JSON.stringify(submittedData))\n    // await setMyRegisted(hostProjectData);\n    // await setMyJoined(joinedProjectData);\n\n    // console.log('내가 참가한 프로젝트:', myJoinedProject);\n    // await getMyRegistedProject(myRegisted);\n    // await getMyJoinedProject(myJoined);\n    // await setMyRegistedProject(myRegistedProjectData);\n    // await setMyJoinedProject(myJoinedProjectData);\n    setMyRegistedProject(myRegisted);\n    await delay(1000);\n    setMyJoinedProject(myJoined);\n    await delay(1000);\n  }, []);\n\n  function delay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  let getMyHostData = async (email) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(email)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          hostProjectData = doc.data().hostProject;\n          getMyRegistedProject(hostProjectData);\n          // setMyRegisted(hostProjectData);\n          console.log(\"hostProjectData:\", hostProjectData);\n          console.log(\"내가 등록한 프로젝트:\", myRegistedProject);\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  let getMyJoinedData = async (email) => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(email)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          joinedProjectData = doc.data().joinProject;\n          getMyJoinedProject(joinedProjectData);\n          console.log(\"joinedProjectData:\", joinedProjectData);\n          console.log(\"내가 참가한 프로젝트:\", myJoinedProject);\n        } else {\n          console.log(\"문서가 존재하지 않습니다\");\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  let getMyRegistedProject = async (data) => {\n    data.map((el) => {\n      firebase\n        .firestore()\n        .collection(\"project\")\n        .doc(el)\n        .get()\n        .then((doc) => {\n          let docData = doc.data();\n          let imageUrl = getFireBaseImage(docData.image).then((url) => {\n            docData.image = url;\n          });\n\n          console.log(\"다시 docData:\", docData);\n          myRegisted.push(docData);\n        });\n    });\n    // for (let i = 0; i < arr.length; i++) {\n    //   firebase.firestore().collection('project').doc(arr[i]).get().then((doc) => {\n    //     myRegistedProjectData.push(doc.data())\n    //   })\n    // }\n    // console.log('나의 등록 프로젝트 데이터:', myRegistedProject)\n  };\n\n  let getMyJoinedProject = async (data) => {\n    data.map((el) => {\n      firebase\n        .firestore()\n        .collection(\"project\")\n        .doc(el)\n        .get()\n        .then((doc) => {\n          let docData = doc.data();\n          getFireBaseImage(docData.image).then((url) => {\n            docData.image = url;\n            console.log(\"참가 프로젝트 데이터, 다시 docData:\", docData);\n          });\n          myJoined.push(docData);\n        });\n    });\n  };\n  //---------------------------------------------------------\n\n  // let dataFire = JSON.parse(localStorage.getItem(\"fireStoreData\"));\n  // let myRegistedProject = dataFire.filter((el) => {\n  //   if (el.host === email) return el;\n  // });\n  // console.log(\"파이어베이스 데이터(전체):\", dataFire);\n\n  // let joinProject = [\"test4\", \"test2\"];\n  // let myJoinedProject = dataFire.filter((el) => {\n  //   console.log(\"data:\", el);\n  //   for (let i = 0; i < joinProject.length; i++) {\n  //     if (el.name === joinProject[i]) return el;\n  //   }\n  // });\n  // console.log(\"myJoinedProject:\", myJoinedProject);\n\n  // for (let i = 0; i < joinProject.length; i++) {\n  //   let temp = dataFire.filter((el) => {\n  //     if (el.name === joinProject[i]) return el;\n  //   })\n  //   console.log('temp 값:', temp)\n  //   myJoinedProject.push(temp)\n  //   console.log('myJoinedProject:', myJoinedProject)\n  // }\n\n  let getFireBaseImage = async (image) => {\n    return storage\n      .ref(\"project\")\n      .child(image)\n      .getDownloadURL()\n      .then((url) => {\n        return url;\n      })\n      .catch((error) => {\n        console.log(\"이미지를 받아오지 못했습니다.\" + error);\n      });\n  };\n\n  let photo = null;\n  let projectName = null;\n  let period = null;\n  let person = null;\n  let lang = null;\n\n  let handleClick = (e) => {\n    console.log(\"e.target:\", e.target);\n    photo = e.target.src;\n    projectName = e.target.name;\n    period = e.target.period;\n    person = e.target.person;\n    lang = e.target.lang;\n    console.log(\n      \"이미지:\",\n      photo,\n      \"이름:\",\n      projectName,\n      \"기간:\",\n      period,\n      \"인원:\",\n      person,\n      \"스킬\",\n      lang\n    );\n    history.push({\n      pathname: \"/mypage/myprojectlistdetail\",\n      state: {\n        photo: photo,\n        name: projectName,\n        period: period,\n        person: person,\n        lang: lang,\n      },\n    });\n  };\n\n  return (\n    <div className={styles.header}>\n      <div>내가 등록한 프로젝트</div>\n      <div className={styles.firstContainer}>\n        {myRegistedProject.map((eachData) => {\n          return (\n            <div className={styles.cardwraper}>\n              <div className={styles.card}>\n                <div className={styles.card_img}>\n                  <img\n                    src={eachData.image}\n                    name={eachData.name}\n                    period={eachData.term}\n                    person={eachData.party}\n                    lang={eachData.skill}\n                    className={styles.photo}\n                    onClick={handleClick}\n                  ></img>\n                </div>\n              </div>\n              <ul>\n                <li>프로젝트 : {eachData.name}</li>\n                <li>예상기간 : {eachData.term}</li>\n                <li>현재인원 : {eachData.party}명</li>\n                <li>\n                  사용언어 :{\" \"}\n                  {eachData.skill.map((el) => {\n                    return <span className={styles.skill}>{el}</span>;\n                  })}\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n\n      <div style={{ marginTop: \"5vh\" }}>내가 참가 중인 프로젝트</div>\n      <div className={styles.secondContainer}>\n        {myJoinedProject.map((eachData) => {\n          console.log(\"리턴의 참가 프로젝트:\", eachData);\n          return (\n            <div className={styles.cardwraper}>\n              <div className={styles.card}>\n                <div className={styles.card_img}>\n                  <img\n                    src={eachData.image}\n                    name={eachData.name}\n                    period={eachData.term}\n                    person={eachData.party}\n                    lang={eachData.skill}\n                    className={styles.photo}\n                  ></img>\n                </div>\n              </div>\n              <ul>\n                <li>프로젝트 이름:{eachData.name}</li>\n                <li>예상 기간: {eachData.term}</li>\n                <li>현재 인원: {eachData.party}</li>\n                <li>\n                  사용언어 :{\" \"}\n                  {eachData.skill.map((el) => {\n                    return <span className={styles.skill}>{el}</span>;\n                  })}\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MyProjectList;\n","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/Profile.js",["104","105","106","107"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/FirstBlock.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",["108","109","110","111","112","113"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Menu.js",["114","115","116","117","118","119","120","121","122","123","124","125"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Project/Project.js",["126","127","128","129","130","131","132","133"],{"ruleId":"134","severity":1,"message":"135","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"138","line":7,"column":35,"nodeType":"136","messageId":"137","endLine":7,"endColumn":40},{"ruleId":"134","severity":1,"message":"139","line":7,"column":42,"nodeType":"136","messageId":"137","endLine":7,"endColumn":48},{"ruleId":"140","severity":1,"message":"141","line":44,"column":13,"nodeType":"142","endLine":51,"endColumn":4},{"ruleId":"140","severity":1,"message":"143","line":51,"column":6,"nodeType":"144","endLine":51,"endColumn":8,"suggestions":"145"},{"ruleId":"134","severity":1,"message":"146","line":55,"column":9,"nodeType":"136","messageId":"137","endLine":55,"endColumn":15},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"134","severity":1,"message":"151","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":12},{"ruleId":"134","severity":1,"message":"152","line":11,"column":5,"nodeType":"136","messageId":"137","endLine":11,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":22,"column":13,"nodeType":"142","endLine":38,"endColumn":4},{"ruleId":"134","severity":1,"message":"153","line":25,"column":7,"nodeType":"136","messageId":"137","endLine":25,"endColumn":11},{"ruleId":"134","severity":1,"message":"154","line":27,"column":7,"nodeType":"136","messageId":"137","endLine":27,"endColumn":15},{"ruleId":"134","severity":1,"message":"155","line":28,"column":7,"nodeType":"136","messageId":"137","endLine":28,"endColumn":20},{"ruleId":"134","severity":1,"message":"156","line":29,"column":7,"nodeType":"136","messageId":"137","endLine":29,"endColumn":10},{"ruleId":"140","severity":1,"message":"157","line":38,"column":6,"nodeType":"144","endLine":38,"endColumn":8,"suggestions":"158"},{"ruleId":"134","severity":1,"message":"159","line":2,"column":20,"nodeType":"136","messageId":"137","endLine":2,"endColumn":26},{"ruleId":"134","severity":1,"message":"160","line":2,"column":28,"nodeType":"136","messageId":"137","endLine":2,"endColumn":39},{"ruleId":"134","severity":1,"message":"161","line":11,"column":18,"nodeType":"136","messageId":"137","endLine":11,"endColumn":27},{"ruleId":"134","severity":1,"message":"162","line":15,"column":18,"nodeType":"136","messageId":"137","endLine":15,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":239,"column":15,"nodeType":"165","endLine":239,"endColumn":65},{"ruleId":"134","severity":1,"message":"166","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"151","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"167","line":13,"column":7,"nodeType":"136","messageId":"137","endLine":13,"endColumn":13},{"ruleId":"134","severity":1,"message":"168","line":14,"column":7,"nodeType":"136","messageId":"137","endLine":14,"endColumn":13},{"ruleId":"134","severity":1,"message":"169","line":15,"column":7,"nodeType":"136","messageId":"137","endLine":15,"endColumn":11},{"ruleId":"170","severity":1,"message":"171","line":22,"column":16,"nodeType":"142","messageId":"172","endLine":22,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":111,"column":11,"nodeType":"165","endLine":111,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":120,"column":17,"nodeType":"175","messageId":"176","endLine":125,"endColumn":18},{"ruleId":"147","replacedBy":"177"},{"ruleId":"149","replacedBy":"178"},{"ruleId":"134","severity":1,"message":"151","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":12},{"ruleId":"134","severity":1,"message":"179","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":19},{"ruleId":"134","severity":1,"message":"180","line":31,"column":5,"nodeType":"136","messageId":"137","endLine":31,"endColumn":26},{"ruleId":"134","severity":1,"message":"181","line":32,"column":5,"nodeType":"136","messageId":"137","endLine":32,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":41,"column":13,"nodeType":"142","endLine":68,"endColumn":4},{"ruleId":"134","severity":1,"message":"153","line":45,"column":7,"nodeType":"136","messageId":"137","endLine":45,"endColumn":11},{"ruleId":"140","severity":1,"message":"182","line":45,"column":14,"nodeType":"183","endLine":45,"endColumn":30},{"ruleId":"140","severity":1,"message":"184","line":46,"column":15,"nodeType":"183","endLine":46,"endColumn":25},{"ruleId":"134","severity":1,"message":"154","line":47,"column":7,"nodeType":"136","messageId":"137","endLine":47,"endColumn":15},{"ruleId":"140","severity":1,"message":"185","line":47,"column":18,"nodeType":"183","endLine":47,"endColumn":31},{"ruleId":"134","severity":1,"message":"155","line":48,"column":7,"nodeType":"136","messageId":"137","endLine":48,"endColumn":20},{"ruleId":"140","severity":1,"message":"186","line":48,"column":23,"nodeType":"183","endLine":48,"endColumn":41},{"ruleId":"134","severity":1,"message":"156","line":49,"column":7,"nodeType":"136","messageId":"137","endLine":49,"endColumn":10},{"ruleId":"140","severity":1,"message":"187","line":49,"column":13,"nodeType":"183","endLine":49,"endColumn":21},{"ruleId":"170","severity":1,"message":"188","line":120,"column":19,"nodeType":"142","messageId":"189","endLine":120,"endColumn":21},{"ruleId":"134","severity":1,"message":"190","line":128,"column":15,"nodeType":"136","messageId":"137","endLine":128,"endColumn":23},{"ruleId":"170","severity":1,"message":"188","line":145,"column":19,"nodeType":"142","messageId":"189","endLine":145,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":246,"column":19,"nodeType":"165","endLine":254,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":281,"column":19,"nodeType":"165","endLine":288,"endColumn":20},{"ruleId":"134","severity":1,"message":"151","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":12},{"ruleId":"134","severity":1,"message":"155","line":13,"column":5,"nodeType":"136","messageId":"137","endLine":13,"endColumn":18},{"ruleId":"134","severity":1,"message":"156","line":14,"column":5,"nodeType":"136","messageId":"137","endLine":14,"endColumn":8},{"ruleId":"163","severity":1,"message":"164","line":21,"column":9,"nodeType":"165","endLine":21,"endColumn":62},{"ruleId":"134","severity":1,"message":"151","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":18,"column":13,"nodeType":"142","endLine":34,"endColumn":4},{"ruleId":"134","severity":1,"message":"153","line":22,"column":7,"nodeType":"136","messageId":"137","endLine":22,"endColumn":11},{"ruleId":"134","severity":1,"message":"154","line":24,"column":7,"nodeType":"136","messageId":"137","endLine":24,"endColumn":15},{"ruleId":"134","severity":1,"message":"155","line":25,"column":7,"nodeType":"136","messageId":"137","endLine":25,"endColumn":20},{"ruleId":"134","severity":1,"message":"156","line":26,"column":7,"nodeType":"136","messageId":"137","endLine":26,"endColumn":10},{"ruleId":"134","severity":1,"message":"191","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":20},{"ruleId":"134","severity":1,"message":"192","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":13},{"ruleId":"134","severity":1,"message":"193","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":16},{"ruleId":"134","severity":1,"message":"151","line":14,"column":8,"nodeType":"136","messageId":"137","endLine":14,"endColumn":12},{"ruleId":"134","severity":1,"message":"194","line":18,"column":12,"nodeType":"136","messageId":"137","endLine":18,"endColumn":17},{"ruleId":"134","severity":1,"message":"195","line":24,"column":7,"nodeType":"136","messageId":"137","endLine":24,"endColumn":15},{"ruleId":"134","severity":1,"message":"196","line":46,"column":21,"nodeType":"136","messageId":"137","endLine":46,"endColumn":30},{"ruleId":"134","severity":1,"message":"197","line":47,"column":21,"nodeType":"136","messageId":"137","endLine":47,"endColumn":33},{"ruleId":"134","severity":1,"message":"198","line":48,"column":21,"nodeType":"136","messageId":"137","endLine":48,"endColumn":26},{"ruleId":"134","severity":1,"message":"199","line":49,"column":21,"nodeType":"136","messageId":"137","endLine":49,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":172,"column":13,"nodeType":"165","endLine":176,"endColumn":14},{"ruleId":"163","severity":1,"message":"164","line":179,"column":15,"nodeType":"165","endLine":183,"endColumn":16},{"ruleId":"134","severity":1,"message":"200","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":20},{"ruleId":"134","severity":1,"message":"201","line":2,"column":22,"nodeType":"136","messageId":"137","endLine":2,"endColumn":26},{"ruleId":"134","severity":1,"message":"202","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":16},{"ruleId":"134","severity":1,"message":"179","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":19},{"ruleId":"134","severity":1,"message":"203","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":17},{"ruleId":"134","severity":1,"message":"204","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":19},{"ruleId":"134","severity":1,"message":"205","line":19,"column":18,"nodeType":"136","messageId":"137","endLine":19,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":84,"column":19,"nodeType":"165","endLine":92,"endColumn":20},"no-unused-vars","'Mypage' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getFirestoreData'. Either include it or remove the dependency array.","ArrayExpression",["206"],"'result' is assigned a value but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'auth' is defined but never used.","'appliedData' is assigned a value but never used.","'name' is assigned a value but never used.","'photoUrl' is assigned a value but never used.","'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appliedData' and 'getMyAppliedProject'. Either include them or remove the dependency array.",["209"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'setFinish' is assigned a value but never used.","'setSigned' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'period' is assigned a value but never used.","'person' is assigned a value but never used.","'lang' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["207"],["208"],"'firestore' is defined but never used.","'myRegistedProjectData' is defined but never used.","'myJoinedProjectData' is defined but never used.","Assignments to the 'name' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'email' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'photoUrl' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'emailVerified' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'uid' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'imageUrl' is assigned a value but never used.","'useContext' is defined but never used.","'login' is defined but never used.","'selected' is defined but never used.","'delay' is defined but never used.","'provider' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","'withRouter' is defined but never used.","'Link' is defined but never used.","'firebase' is defined but never used.","'storage' is defined but never used.","'useEffect' is defined but never used.","'setDataFire' is assigned a value but never used.",{"desc":"210","fix":"211"},"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},"Update the dependencies array to be: [getFirestoreData]",{"range":"214","text":"215"},"Update the dependencies array to be: [appliedData, getMyAppliedProject]",{"range":"216","text":"217"},[1317,1319],"[getFirestoreData]",[1115,1117],"[appliedData, getMyAppliedProject]"]