
[{"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Menu.js":"1","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Guide/Guide.js":"2","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/SecondBlock.js":"3","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/MyPage.js":"4","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Regist/Regist.js":"5","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/Profile.js":"6","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/WishList.js":"7","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/App.js":"8","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/FirstBlock.js":"9","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/MainPage.js":"10","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/RegistStatus.js":"11","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js":"12"},{"size":5862,"mtime":1611023384748,"results":"13","hashOfConfig":"14"},{"size":788,"mtime":1610934200375,"results":"15","hashOfConfig":"14"},{"size":1106,"mtime":1610608977390,"results":"16","hashOfConfig":"14"},{"size":1928,"mtime":1611029669593,"results":"17","hashOfConfig":"14"},{"size":7402,"mtime":1610944156873,"results":"18","hashOfConfig":"14"},{"size":956,"mtime":1611029486378,"results":"19","hashOfConfig":"14"},{"size":615,"mtime":1611032400004,"results":"20","hashOfConfig":"14"},{"size":719,"mtime":1611034923918,"results":"21","hashOfConfig":"14"},{"size":1713,"mtime":1610503911976,"results":"22","hashOfConfig":"14"},{"size":398,"mtime":1610503910452,"results":"23","hashOfConfig":"14"},{"size":582,"mtime":1611032071342,"results":"24","hashOfConfig":"14"},{"size":411,"mtime":1611033369570,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"26wkim",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Menu.js",["53","54","55","56","57","58","59","60","61","62","63","64"],"import { useContext } from \"react\";\nimport \"../css/Menu.css\";\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport React from \"react\";\nimport login from \"../component/App\";\nimport selected from \"../component/App\";\nimport MainPage from \"../component/MainPage/MainPage\";\nimport Guide from \"../component/Guide/Guide\";\nimport Project from \"../component/Project/Project\";\nimport Regist from \"../component/Regist/Regist\";\nimport MyPage from \"../component/MyPage/MyPage\";\nimport ProjectDetail from \"../component/Project/ProjectDetail\";\nimport firebase from \"firebase/app\";\nimport auth from \"firebase/auth\"; //이게 있어야 오류가 안난다\nimport { firestore } from \"../firebase\";\n\nfunction Menu(props) {\n  let provider = new firebase.auth.GoogleAuthProvider();\n\n  let googleLogin = () => {\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.SESSION)\n      .then(() => {\n        let provider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth().onAuthStateChanged((user) => {\n          if (user) {\n            console.log(\"로그인이 되어 있습니다\");\n          } else {\n            firebase\n              .auth()\n              .signInWithPopup(provider)\n              .then(() => {\n                props.setLogin(true);\n                console.log(\"로그인\");\n              })\n              .catch((error) => {\n                let errorCode = error.code;\n                let errorMessage = error.message;\n                let email = error.email;\n                let credential = error.credential;\n              });\n          }\n        });\n      });\n  };\n\n  let googleLogout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        props.setLogin(false);\n        console.log(\"로그아웃을 성공적으로 실시함\");\n      })\n      .catch(function (error) {\n        // An error happened.\n      });\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Link to=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <h1 className=\"logo\">플젝하쉴?!</h1>\n          </Link>\n          <nav className=\"nav\">\n            <Link\n              to=\"/guide\"\n              style={{ textDecoration: \"none\", color: \"black\" }}\n            >\n              <span className=\"menu\">가이드</span>\n            </Link>\n            <Link\n              to=\"/project\"\n              style={{ textDecoration: \"none\", color: \"black\" }}\n            >\n              <span className=\"menu\">프로젝트 열람</span>\n            </Link>\n\n            {props.login === true ? (\n              <Link\n                to=\"/regist\"\n                style={{ textDecoration: \"none\", color: \"black\" }}\n              >\n                <span className=\"menu\">프로젝트 등록</span>\n              </Link>\n            ) : (\n              <span\n                className=\"menu\"\n                onClick={() => {\n                  alert(\"먼저 로그인을 해주세요\");\n                }}\n              >\n                프로젝트 등록\n              </span>\n            )}\n            {props.login === true ? (\n              <Link\n                to=\"/mypage/profile\"\n                style={{ textDecoration: \"none\", color: \"black\" }}\n              >\n                <span className=\"menu\">프로젝트 관리</span>\n              </Link>\n            ) : (\n              <span\n                className=\"menu\"\n                onClick={() => {\n                  alert(\"먼저 로그인을 해주세요\");\n                }}\n              >\n                프로젝트 관리\n              </span>\n            )}\n          </nav>\n          {props.login === false ? (\n            <img\n              className=\"login_image\"\n              src=\"image/login.png\"\n              onClick={googleLogin}\n            ></img>\n          ) : (\n            <img\n              className=\"login_image\"\n              src=\"image/signed.png\"\n              onClick={googleLogout}\n            ></img>\n          )}\n        </header>\n        <Link to=\"/projectdetail\"></Link>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/guide\" component={Guide} />\n          <Route exact path=\"/project\" component={Project} />\n          <Route exact path=\"/projectdetail\" component={ProjectDetail} />\n          <Route exact path=\"/regist\" component={Regist} />\n          <Route exact path=\"/mypage\" component={MyPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default Menu;\n\n/*\n\nimport { useContext } from 'react';\nimport '../css/Menu.css';\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport React from 'react'\nimport login from '../component/App'\nimport selected from '../component/App'\nimport MainPage from '../component/MainPage/MainPage';\nimport Guide from '../component/Guide/Guide'\nimport Project from '../component/Project/Project'\nimport MyPage from '../component/MyPage/MyPage'\n\nfunction Menu(props) {\n\n\n  return (\n\t\t<Router>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"logo\">플젝하쉴?!</h1>\n\t\t\t\t<nav className=\"nav\">\n\t\t\t\t\t<Link to=\"/guide\">\n\t\t\t\t\t\t<span className=\"menu\" onClick={()=>{props.setMenu(1)}}>가이드</span>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<span className=\"menu\" onClick={()=>{props.setMenu(2)}}>프로젝트 열람</span>\n\t\t\t\t\t<span className=\"menu\" onClick={()=>{props.setMenu(3)}}>프로젝트 등록</span>\n\t\t\t\t</nav>\n\t\t\t\t<img className=\"login_image\" src='image/login.png'></img>\n      </header>\n\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={MainPage}/>\n\t\t\t\t\t<Route exact path=\"/guide\" component={Guide}/>\n\t\t\t\t\t<Route exact path=\"/project\" component={Project}/>\n\t\t\t\t\t<Route exact path=\"/mypage\" component={MyPage}/>\n\t\t\t\t</Switch>\n    </div>\n\t\t</Router>\n  );\n}\n\n\n*/\n","/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Guide/Guide.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/SecondBlock.js",["65"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/MyPage.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/Regist/Regist.js",["66","67","68","69"],"import styles from \"../../css/Regist/Regist.module.css\";\nimport { useState, useRef, useCallback } from \"react\";\nimport { firestore } from \"../../firebase\";\nimport { storage } from \"../../firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Regist() {\n  const [comment, setComment] = useState(\"\");\n  const [finish, setFinish] = useState(false);\n  const [host, setHost] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [party, setParty] = useState(0);\n  const [signed, setSigned] = useState(0);\n  const [skill, setSkilled] = useState([]);\n  const [term, setTerm] = useState(\"\");\n  const history = useHistory();\n\n  //하나의 기술 문자열을 담기 위한 샅애\n  const [eachSkill, setEachSkill] = useState(\"\");\n\n  //이미지를 업로드 하기 위한 상태들\n  let allInputs = { imgUrl: \"\" };\n  const [imageAsFile, setImageAsFile] = useState(\"\");\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      console.log(user.displayName);\n      console.log(user.email);\n      setHost(user.email);\n    } else {\n      console.log(\"유저 없는 뎁쇼\");\n    }\n  });\n\n  let createDatabase = async () => {\n    let result = await handleFireBaseUpload(); //여기서 일단 이미지를 올린다.\n    if (result === false) {\n      //2차 안전장치\n      console.log(\"이미지를 올리지 않아서 아무 일도 안생길 거임\");\n    } else if (!comment || finish || !name || !party || !eachSkill) {\n      alert(\"모든 항목은 필수입니다\");\n      window.location.reload();\n    } else {\n      firestore\n        .collection(\"project\")\n        .doc(name)\n        .get()\n        .then(function (docName) {\n          if (docName.data() !== undefined) {\n            alert(\"중복된 프로젝트명입니다. 다른 프로젝트 이름을 정해주세요\");\n            window.location.reload();\n          } else if (name + \".png\" !== imageAsFile.name) {\n            alert(\"프로젝트 이름과 이미지 파일은 이름이 같아야 합니다.\");\n            window.location.reload();\n          } else {\n            firestore\n              .collection(\"project\")\n              .doc(name)\n              .set({\n                host: host,\n                comment: comment,\n                finish: finish,\n                name: name,\n                party: party,\n                signed: signed,\n                skill: skill,\n                term: term,\n                image: imageAsFile.name,\n              })\n              .then(function () {\n                alert(\"프로젝트 등록에 성공했습니다\");\n                window.location.reload();\n              })\n              .catch(function (error) {\n                console.error(\"다음과 같은 에러가 발생했습니다 : \" + error);\n              });\n          }\n        });\n    }\n  };\n\n  let skillbutton = () => {\n    if (skill.length > 2) {\n      alert(\"기술 스택은 3개까지만 넣을 수 있어용~\");\n    } else {\n      if (skill.includes(eachSkill.toLowerCase()) === false) {\n        setSkilled(skill.concat(eachSkill.toLowerCase()));\n      } else {\n        alert(\"중복된 기술이에용~\");\n      }\n    }\n  };\n\n  let handleImageAsFile = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    const image = e.target.files[0];\n    reader.onloadend = () => {\n      setImageAsFile(image);\n      setImageAsUrl(reader.result);\n    };\n    reader.readAsDataURL(image);\n  };\n\n  let handleFireBaseUpload = (e) => {\n    if (imageAsFile === \"\") {\n      alert(`이미지 파일을 올려 주세요!!!`);\n      return false;\n    } else {\n      console.log(\"이미지 업로드를 시작합니다\");\n      const uploadTask = storage\n        .ref(`/project/${imageAsFile.name}`)\n        .put(imageAsFile);\n      uploadTask.on(\n        \"state_changed\",\n        (snapShot) => {\n          console.log(snapShot);\n        },\n        (err) => {\n          console.log(err);\n        },\n        () => {\n          storage\n            .ref(\"project\")\n            .child(imageAsFile.name)\n            .getDownloadURL()\n            .then((fireBaseUrl) => {\n              setImageAsUrl((prevObject) => ({\n                ...prevObject,\n                imgUrl: fireBaseUrl,\n              }));\n            });\n        }\n      );\n      return true;\n    }\n  };\n\n  return (\n    <div className={styles.regist}>\n      <div className={styles.projectint}>\n        <span>\n          <p>\n            프로젝트 이름 :{\" \"}\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></input>\n          </p>\n          <div>\n            <form onSubmit={handleFireBaseUpload}>\n              <input\n                type=\"file\"\n                accept=\"image/png\"\n                onChange={handleImageAsFile}\n              />\n            </form>\n          </div>\n          <div>\n            {imageAsFile !== \"\" ? (\n              <img src={imageAsUrl} style={{ width: \"100%\" }} />\n            ) : (\n              <span>\n                png 파일을 선택해주세요. 파일의 이름은 프로젝트의 이름과\n                동일해야 합니다.\n              </span>\n            )}\n          </div>\n        </span>\n        <span>\n          <p>\n            모집인원 :{\" \"}\n            <input\n              type=\"number\"\n              value={party}\n              onChange={(e) => setParty(e.target.value)}\n            ></input>\n          </p>\n          <p>\n            현재 등록 인원 :{\" \"}\n            <input\n              type=\"number\"\n              value={signed}\n              onChange={(e) => setSigned(e.target.value)}\n            ></input>\n          </p>\n          <p>\n            프로젝트 기간 :{\" \"}\n            <input\n              type=\"date\"\n              value={term}\n              onChange={(e) => setTerm(e.target.value)}\n            ></input>\n          </p>\n\n          <div>\n            기술 스택 :{\" \"}\n            <input\n              type=\"text\"\n              value={eachSkill}\n              onChange={(e) => setEachSkill(e.target.value)}\n            ></input>\n            <button onClick={skillbutton}>클릭</button>\n            <div className={styles.teckstack}>\n              <li>\n                기술스택1 : <div style={{ width: \"50%\" }}>{skill[0]}</div>\n              </li>\n              <li>\n                기술스택2 : <div style={{ width: \"50%\" }}>{skill[1]}</div>\n              </li>\n              <li>\n                기술스택3 : <div style={{ width: \"50%\" }}>{skill[2]}</div>\n              </li>\n            </div>\n          </div>\n        </span>\n      </div>\n\n      <p>\n        프로젝트 개요 :{\" \"}\n        <div style={{ paddingTop: \"20px\" }}>\n          <textarea\n            type=\"text\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            style={{ width: \"50vh\", height: \"15vh\" }}\n          ></textarea>\n        </div>\n      </p>\n      <div className={styles.registbtn}>\n        <span>\n          <button onClick={createDatabase}>등록하기</button>\n        </span>\n        <span style={{ paddingLeft: \"20px\" }}>\n          <button onClick={() => history.push(\"/\")}>취소</button>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Regist;\n",["70","71"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/Profile.js",["72","73","74","75"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/WishList.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/App.js",["76","77"],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/FirstBlock.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MainPage/MainPage.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/RegistStatus.js",[],"/Users/jeongbyeongju/Desktop/immersive/Final-Project/forum_client/forum_project/src/component/MyPage/ApplyStatus.js",[],{"ruleId":"78","severity":1,"message":"79","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":13},{"ruleId":"78","severity":1,"message":"83","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":16},{"ruleId":"78","severity":1,"message":"84","line":14,"column":8,"nodeType":"80","messageId":"81","endLine":14,"endColumn":12},{"ruleId":"78","severity":1,"message":"85","line":15,"column":10,"nodeType":"80","messageId":"81","endLine":15,"endColumn":19},{"ruleId":"78","severity":1,"message":"86","line":18,"column":7,"nodeType":"80","messageId":"81","endLine":18,"endColumn":15},{"ruleId":"78","severity":1,"message":"87","line":38,"column":21,"nodeType":"80","messageId":"81","endLine":38,"endColumn":30},{"ruleId":"78","severity":1,"message":"88","line":39,"column":21,"nodeType":"80","messageId":"81","endLine":39,"endColumn":33},{"ruleId":"78","severity":1,"message":"89","line":40,"column":21,"nodeType":"80","messageId":"81","endLine":40,"endColumn":26},{"ruleId":"78","severity":1,"message":"90","line":41,"column":21,"nodeType":"80","messageId":"81","endLine":41,"endColumn":31},{"ruleId":"91","severity":1,"message":"92","line":118,"column":13,"nodeType":"93","endLine":122,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":124,"column":13,"nodeType":"93","endLine":128,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":42,"column":20,"nodeType":"93","endLine":42,"endColumn":57},{"ruleId":"78","severity":1,"message":"94","line":2,"column":20,"nodeType":"80","messageId":"81","endLine":2,"endColumn":26},{"ruleId":"78","severity":1,"message":"95","line":2,"column":28,"nodeType":"80","messageId":"81","endLine":2,"endColumn":39},{"ruleId":"78","severity":1,"message":"96","line":11,"column":18,"nodeType":"80","messageId":"81","endLine":11,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":165,"column":15,"nodeType":"93","endLine":165,"endColumn":65},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"78","severity":1,"message":"84","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":12},{"ruleId":"78","severity":1,"message":"101","line":13,"column":5,"nodeType":"80","messageId":"81","endLine":13,"endColumn":18},{"ruleId":"78","severity":1,"message":"102","line":14,"column":5,"nodeType":"80","messageId":"81","endLine":14,"endColumn":8},{"ruleId":"91","severity":1,"message":"92","line":21,"column":9,"nodeType":"93","endLine":21,"endColumn":62},{"ruleId":"78","severity":1,"message":"103","line":7,"column":35,"nodeType":"80","messageId":"81","endLine":7,"endColumn":40},{"ruleId":"78","severity":1,"message":"104","line":7,"column":42,"nodeType":"80","messageId":"81","endLine":7,"endColumn":48},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'login' is defined but never used.","'selected' is defined but never used.","'auth' is defined but never used.","'firestore' is defined but never used.","'provider' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'useCallback' is defined but never used.","'setFinish' is assigned a value but never used.","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'emailVerified' is assigned a value but never used.","'uid' is assigned a value but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]

